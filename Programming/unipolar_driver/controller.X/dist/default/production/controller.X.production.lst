

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Jun 15 20:25:52 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	12F675
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	intentry,global,class=CODE,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	functab,global,class=ENTRY,delta=2
    35                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    37                           	dabs	1,0x5E,2
    38  0000                     
    39                           ; Version 2.40
    40                           ; Generated 06/12/2021 GMT
    41                           ; 
    42                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution. Publication is not required when
    56                           ;        this file is used in an embedded application.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC12F675 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  000A                     	;# 
    81  000B                     	;# 
    82  000C                     	;# 
    83  000E                     	;# 
    84  000E                     	;# 
    85  000F                     	;# 
    86  0010                     	;# 
    87  0019                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  008C                     	;# 
    93  008E                     	;# 
    94  0090                     	;# 
    95  0095                     	;# 
    96  0096                     	;# 
    97  0096                     	;# 
    98  0099                     	;# 
    99  009A                     	;# 
   100  009A                     	;# 
   101  009B                     	;# 
   102  009C                     	;# 
   103  009D                     	;# 
   104  009E                     	;# 
   105  009F                     	;# 
   106  0000                     	;# 
   107  0001                     	;# 
   108  0002                     	;# 
   109  0003                     	;# 
   110  0004                     	;# 
   111  0005                     	;# 
   112  000A                     	;# 
   113  000B                     	;# 
   114  000C                     	;# 
   115  000E                     	;# 
   116  000E                     	;# 
   117  000F                     	;# 
   118  0010                     	;# 
   119  0019                     	;# 
   120  001E                     	;# 
   121  001F                     	;# 
   122  0081                     	;# 
   123  0085                     	;# 
   124  008C                     	;# 
   125  008E                     	;# 
   126  0090                     	;# 
   127  0095                     	;# 
   128  0096                     	;# 
   129  0096                     	;# 
   130  0099                     	;# 
   131  009A                     	;# 
   132  009A                     	;# 
   133  009B                     	;# 
   134  009C                     	;# 
   135  009D                     	;# 
   136  009E                     	;# 
   137  009F                     	;# 
   138  0000                     	;# 
   139  0001                     	;# 
   140  0002                     	;# 
   141  0003                     	;# 
   142  0004                     	;# 
   143  0005                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0019                     	;# 
   152  001E                     	;# 
   153  001F                     	;# 
   154  0081                     	;# 
   155  0085                     	;# 
   156  008C                     	;# 
   157  008E                     	;# 
   158  0090                     	;# 
   159  0095                     	;# 
   160  0096                     	;# 
   161  0096                     	;# 
   162  0099                     	;# 
   163  009A                     	;# 
   164  009A                     	;# 
   165  009B                     	;# 
   166  009C                     	;# 
   167  009D                     	;# 
   168  009E                     	;# 
   169  009F                     	;# 
   170  0000                     	;# 
   171  0001                     	;# 
   172  0002                     	;# 
   173  0003                     	;# 
   174  0004                     	;# 
   175  0005                     	;# 
   176  000A                     	;# 
   177  000B                     	;# 
   178  000C                     	;# 
   179  000E                     	;# 
   180  000E                     	;# 
   181  000F                     	;# 
   182  0010                     	;# 
   183  0019                     	;# 
   184  001E                     	;# 
   185  001F                     	;# 
   186  0081                     	;# 
   187  0085                     	;# 
   188  008C                     	;# 
   189  008E                     	;# 
   190  0090                     	;# 
   191  0095                     	;# 
   192  0096                     	;# 
   193  0096                     	;# 
   194  0099                     	;# 
   195  009A                     	;# 
   196  009A                     	;# 
   197  009B                     	;# 
   198  009C                     	;# 
   199  009D                     	;# 
   200  009E                     	;# 
   201  009F                     	;# 
   202  0000                     	;# 
   203  0001                     	;# 
   204  0002                     	;# 
   205  0003                     	;# 
   206  0004                     	;# 
   207  0005                     	;# 
   208  000A                     	;# 
   209  000B                     	;# 
   210  000C                     	;# 
   211  000E                     	;# 
   212  000E                     	;# 
   213  000F                     	;# 
   214  0010                     	;# 
   215  0019                     	;# 
   216  001E                     	;# 
   217  001F                     	;# 
   218  0081                     	;# 
   219  0085                     	;# 
   220  008C                     	;# 
   221  008E                     	;# 
   222  0090                     	;# 
   223  0095                     	;# 
   224  0096                     	;# 
   225  0096                     	;# 
   226  0099                     	;# 
   227  009A                     	;# 
   228  009A                     	;# 
   229  009B                     	;# 
   230  009C                     	;# 
   231  009D                     	;# 
   232  009E                     	;# 
   233  009F                     	;# 
   234  0000                     	;# 
   235  0001                     	;# 
   236  0002                     	;# 
   237  0003                     	;# 
   238  0004                     	;# 
   239  0005                     	;# 
   240  000A                     	;# 
   241  000B                     	;# 
   242  000C                     	;# 
   243  000E                     	;# 
   244  000E                     	;# 
   245  000F                     	;# 
   246  0010                     	;# 
   247  0019                     	;# 
   248  001E                     	;# 
   249  001F                     	;# 
   250  0081                     	;# 
   251  0085                     	;# 
   252  008C                     	;# 
   253  008E                     	;# 
   254  0090                     	;# 
   255  0095                     	;# 
   256  0096                     	;# 
   257  0096                     	;# 
   258  0099                     	;# 
   259  009A                     	;# 
   260  009A                     	;# 
   261  009B                     	;# 
   262  009C                     	;# 
   263  009D                     	;# 
   264  009E                     	;# 
   265  009F                     	;# 
   266  0000                     	;# 
   267  0001                     	;# 
   268  0002                     	;# 
   269  0003                     	;# 
   270  0004                     	;# 
   271  0005                     	;# 
   272  000A                     	;# 
   273  000B                     	;# 
   274  000C                     	;# 
   275  000E                     	;# 
   276  000E                     	;# 
   277  000F                     	;# 
   278  0010                     	;# 
   279  0019                     	;# 
   280  001E                     	;# 
   281  001F                     	;# 
   282  0081                     	;# 
   283  0085                     	;# 
   284  008C                     	;# 
   285  008E                     	;# 
   286  0090                     	;# 
   287  0095                     	;# 
   288  0096                     	;# 
   289  0096                     	;# 
   290  0099                     	;# 
   291  009A                     	;# 
   292  009A                     	;# 
   293  009B                     	;# 
   294  009C                     	;# 
   295  009D                     	;# 
   296  009E                     	;# 
   297  009F                     	;# 
   298  0000                     	;# 
   299  0001                     	;# 
   300  0002                     	;# 
   301  0003                     	;# 
   302  0004                     	;# 
   303  0005                     	;# 
   304  000A                     	;# 
   305  000B                     	;# 
   306  000C                     	;# 
   307  000E                     	;# 
   308  000E                     	;# 
   309  000F                     	;# 
   310  0010                     	;# 
   311  0019                     	;# 
   312  001E                     	;# 
   313  001F                     	;# 
   314  0081                     	;# 
   315  0085                     	;# 
   316  008C                     	;# 
   317  008E                     	;# 
   318  0090                     	;# 
   319  0095                     	;# 
   320  0096                     	;# 
   321  0096                     	;# 
   322  0099                     	;# 
   323  009A                     	;# 
   324  009A                     	;# 
   325  009B                     	;# 
   326  009C                     	;# 
   327  009D                     	;# 
   328  009E                     	;# 
   329  009F                     	;# 
   330                           
   331                           	psect	idataBANK0
   332  019A                     __pidataBANK0:
   333                           
   334                           ;initializer for _func_ptr
   335  019A  3402               	retlw	low (fp__even_pins_set_clear-i1fpbase)
   336  019B  3403               	retlw	low (fp__even_pins_clear_set-i1fpbase)
   337  019C  3401               	retlw	low (fp__odd_pins_set_clear-i1fpbase)
   338  019D  3404               	retlw	low (fp__odd_pins_clear_set-i1fpbase)
   339  019E  3404               	retlw	low (fp__odd_pins_clear_set-i1fpbase)
   340  019F  3401               	retlw	low (fp__odd_pins_set_clear-i1fpbase)
   341  01A0  3403               	retlw	low (fp__even_pins_clear_set-i1fpbase)
   342  01A1  3402               	retlw	low (fp__even_pins_set_clear-i1fpbase)
   343                           
   344                           ;initializer for _num_steps
   345  01A2  34F4               	retlw	244
   346  01A3  3401               	retlw	1
   347  01A4  340C               	retlw	12
   348  01A5  3403               	retlw	3
   349                           
   350                           ;initializer for _target_OF_num
   351  01A6  3401               	retlw	1
   352  01A7  3400               	retlw	0
   353  000E                     _TMR1	set	14
   354  0010                     _T1CONbits	set	16
   355  0019                     _CMCONbits	set	25
   356  002D                     _GPIO5	set	45
   357  0080                     _TMR1ON	set	128
   358  0081                     _TMR1CS	set	129
   359  0083                     _T1OSCEN	set	131
   360  0086                     _TMR1GE	set	134
   361  00F8                     _ADON	set	248
   362  005D                     _TMR0IE	set	93
   363  005E                     _PEIE	set	94
   364  005F                     _GIE	set	95
   365  002A                     _GPIO2	set	42
   366  0028                     _GPIO0	set	40
   367  002C                     _GPIO4	set	44
   368  0029                     _GPIO1	set	41
   369  0060                     _TMR1IF	set	96
   370  002B                     _GPIO3	set	43
   371  009F                     _ANSELbits	set	159
   372  042D                     _TRISIO5	set	1069
   373  0460                     _TMR1IE	set	1120
   374  042C                     _TRISIO4	set	1068
   375  042A                     _TRISIO2	set	1066
   376  0429                     _TRISIO1	set	1065
   377  0428                     _TRISIO0	set	1064
   378  042B                     _TRISIO3	set	1067
   379                           
   380                           	psect	strings
   381  0172                     __pstrings:
   382  0172                     stringtab:
   383  0172                     __stringtab:
   384  0172                     stringcode:	
   385                           ;	String table - string pointers are 1 byte each
   386                           
   387  0172                     stringdir:
   388  0172  3001               	movlw	high stringdir
   389  0173  008A               	movwf	10
   390  0174  0804               	movf	4,w
   391  0175  0A84               	incf	4,f
   392  0176  0782               	addwf	2,f
   393  0177                     __stringbase:
   394  0177  3400               	retlw	0
   395  0178                     __end_of__stringtab:
   396  0178                     STR_1:
   397  0178  344F               	retlw	79	;'O'
   398  0179  3446               	retlw	70	;'F'
   399  017A  345F               	retlw	95	;'_'
   400  017B  346E               	retlw	110	;'n'
   401  017C  3475               	retlw	117	;'u'
   402  017D  346D               	retlw	109	;'m'
   403  017E  345F               	retlw	95	;'_'
   404  017F  3454               	retlw	84	;'T'
   405  0180  344D               	retlw	77	;'M'
   406  0181  3452               	retlw	82	;'R'
   407  0182  3431               	retlw	49	;'1'
   408  0183  343A               	retlw	58	;':'
   409  0184  3420               	retlw	32	;' '
   410  0185  3400               	retlw	0
   411  0186                     STR_2:
   412  0186  3420               	retlw	32	;' '
   413  0187  340A               	retlw	10
   414  0188  3400               	retlw	0
   415                           
   416                           	psect	cinit
   417  0010                     start_initialization:	
   418                           ; #config settings
   419                           
   420  0010                     __initialization:
   421                           
   422                           ; Initialize objects allocated to BANK0
   423  0010  219A               	fcall	__pidataBANK0	;fetch initializer
   424  0011  00B6               	movwf	__pdataBANK0& (0+127)
   425  0012  219B               	fcall	__pidataBANK0+1	;fetch initializer
   426  0013  00B7               	movwf	(__pdataBANK0+1)& (0+127)
   427  0014  219C               	fcall	__pidataBANK0+2	;fetch initializer
   428  0015  00B8               	movwf	(__pdataBANK0+2)& (0+127)
   429  0016  219D               	fcall	__pidataBANK0+3	;fetch initializer
   430  0017  00B9               	movwf	(__pdataBANK0+3)& (0+127)
   431  0018  219E               	fcall	__pidataBANK0+4	;fetch initializer
   432  0019  00BA               	movwf	(__pdataBANK0+4)& (0+127)
   433  001A  219F               	fcall	__pidataBANK0+5	;fetch initializer
   434  001B  00BB               	movwf	(__pdataBANK0+5)& (0+127)
   435  001C  21A0               	fcall	__pidataBANK0+6	;fetch initializer
   436  001D  00BC               	movwf	(__pdataBANK0+6)& (0+127)
   437  001E  21A1               	fcall	__pidataBANK0+7	;fetch initializer
   438  001F  00BD               	movwf	(__pdataBANK0+7)& (0+127)
   439  0020  21A2               	fcall	__pidataBANK0+8	;fetch initializer
   440  0021  00BE               	movwf	(__pdataBANK0+8)& (0+127)
   441  0022  21A3               	fcall	__pidataBANK0+9	;fetch initializer
   442  0023  00BF               	movwf	(__pdataBANK0+9)& (0+127)
   443  0024  21A4               	fcall	__pidataBANK0+10	;fetch initializer
   444  0025  00C0               	movwf	(__pdataBANK0+10)& (0+127)
   445  0026  21A5               	fcall	__pidataBANK0+11	;fetch initializer
   446  0027  00C1               	movwf	(__pdataBANK0+11)& (0+127)
   447  0028  21A6               	fcall	__pidataBANK0+12	;fetch initializer
   448  0029  00C2               	movwf	(__pdataBANK0+12)& (0+127)
   449  002A  21A7               	fcall	__pidataBANK0+13	;fetch initializer
   450  002B  00C3               	movwf	(__pdataBANK0+13)& (0+127)
   451                           
   452                           ; Clear objects allocated to BANK0
   453  002C  1383               	bcf	3,7	;select IRP bank0
   454  002D  3044               	movlw	low __pbssBANK0
   455  002E  0084               	movwf	4
   456  002F  3051               	movlw	low (__pbssBANK0+13)
   457  0030  21B4               	fcall	clear_ram0
   458  0031                     end_of_initialization:	
   459                           ;End of C runtime variable initialization code
   460                           
   461  0031                     __end_of__initialization:
   462  0031  0183               	clrf	3
   463  0032  2907               	ljmp	_main	;jump to C main() function
   464                           
   465                           	psect	bssBANK0
   466  0044                     __pbssBANK0:
   467  0044                     soft_uart_send_int@F620:
   468  0044                     	ds	3
   469  0047                     _message:
   470  0047                     	ds	2
   471  0049                     _current_position:
   472  0049                     	ds	2
   473  004B                     _OF_num_TMR1:
   474  004B                     	ds	2
   475  004D                     _tmp_set_clear_sequence:
   476  004D                     	ds	1
   477  004E                     _set_clear_sequence:
   478  004E                     	ds	1
   479  004F                     _pair_select:
   480  004F                     	ds	1
   481  0050                     _CW_CCW_select:
   482  0050                     	ds	1
   483                           
   484                           	psect	dataBANK0
   485  0036                     __pdataBANK0:
   486  0036                     _func_ptr:
   487  0036                     	ds	8
   488  003E                     _num_steps:
   489  003E                     	ds	4
   490  0042                     _target_OF_num:
   491  0042                     	ds	2
   492                           
   493                           	psect	clrtext
   494  01B4                     clear_ram0:	
   495                           ;	Called with FSR containing the base address, and
   496                           ;	W with the last address+1
   497                           
   498  01B4  0064               	clrwdt	;clear the watchdog before getting into this loop
   499  01B5                     clrloop0:
   500  01B5  0180               	clrf	0	;clear RAM location pointed to by FSR
   501  01B6  0A84               	incf	4,f	;increment pointer
   502  01B7  0604               	xorwf	4,w	;XOR with final address
   503  01B8  1903               	btfsc	3,2	;have we reached the end yet?
   504  01B9  3400               	retlw	0	;all done for this memory range, return
   505  01BA  0604               	xorwf	4,w	;XOR again to restore value
   506  01BB  29B5               	goto	clrloop0	;do the next byte
   507                           
   508                           	psect	cstackCOMMON
   509  0000                     __pcstackCOMMON:
   510  0000                     ??_coil_init:
   511  0000                     ??_comparator_deinit:	
   512                           ; 1 bytes @ 0x0
   513                           
   514  0000                     ??_interrupt_init:	
   515                           ; 1 bytes @ 0x0
   516                           
   517  0000                     ??_TMR1_init:	
   518                           ; 1 bytes @ 0x0
   519                           
   520  0000                     ??_adc_deinit:	
   521                           ; 1 bytes @ 0x0
   522                           
   523  0000                     ??_soft_uart_init:	
   524                           ; 1 bytes @ 0x0
   525                           
   526  0000                     ??_reset_all_pins:	
   527                           ; 1 bytes @ 0x0
   528                           
   529  0000                     ??_retrieve_current_position:	
   530                           ; 1 bytes @ 0x0
   531                           
   532  0000                     ??_even_pins_set_clear:	
   533                           ; 1 bytes @ 0x0
   534                           
   535  0000                     ??_even_pins_clear_set:	
   536                           ; 1 bytes @ 0x0
   537                           
   538  0000                     ??_odd_pins_set_clear:	
   539                           ; 1 bytes @ 0x0
   540                           
   541  0000                     ??_odd_pins_clear_set:	
   542                           ; 1 bytes @ 0x0
   543                           
   544  0000                     ??_update_current_position:	
   545                           ; 1 bytes @ 0x0
   546                           
   547  0000                     ??i1_reset_all_pins:	
   548                           ; 1 bytes @ 0x0
   549                           
   550                           
   551                           	psect	cstackBANK0
   552  0020                     __pcstackBANK0:	
   553                           ; 1 bytes @ 0x0
   554                           
   555  0020                     ?_coil_init:
   556  0020                     ?_comparator_deinit:	
   557                           ; 1 bytes @ 0x0
   558                           
   559  0020                     ?_interrupt_init:	
   560                           ; 1 bytes @ 0x0
   561                           
   562  0020                     ?_TMR1_init:	
   563                           ; 1 bytes @ 0x0
   564                           
   565  0020                     ?_adc_deinit:	
   566                           ; 1 bytes @ 0x0
   567                           
   568  0020                     ?_soft_uart_init:	
   569                           ; 1 bytes @ 0x0
   570                           
   571  0020                     ?_reset_all_pins:	
   572                           ; 1 bytes @ 0x0
   573                           
   574  0020                     ?_retrieve_current_position:	
   575                           ; 1 bytes @ 0x0
   576                           
   577  0020                     ?_start_timer:	
   578                           ; 1 bytes @ 0x0
   579                           
   580  0020                     ?_soft_uart_send_string:	
   581                           ; 1 bytes @ 0x0
   582                           
   583  0020                     ?_TMR1_ISR:	
   584                           ; 1 bytes @ 0x0
   585                           
   586  0020                     ??_TMR1_ISR:	
   587                           ; 1 bytes @ 0x0
   588                           
   589  0020                     ?_even_pins_set_clear:	
   590                           ; 1 bytes @ 0x0
   591                           
   592  0020                     ?_even_pins_clear_set:	
   593                           ; 1 bytes @ 0x0
   594                           
   595  0020                     ?_odd_pins_set_clear:	
   596                           ; 1 bytes @ 0x0
   597                           
   598  0020                     ?_odd_pins_clear_set:	
   599                           ; 1 bytes @ 0x0
   600                           
   601  0020                     ?_main:	
   602                           ; 1 bytes @ 0x0
   603                           
   604  0020                     ?_ISR:	
   605                           ; 1 bytes @ 0x0
   606                           
   607  0020                     ?_soft_uart_send_uint8_t:	
   608                           ; 1 bytes @ 0x0
   609                           
   610  0020                     ?i1_reset_all_pins:	
   611                           ; 1 bytes @ 0x0
   612                           
   613                           
   614                           ; 1 bytes @ 0x0
   615  0020                     	ds	5
   616  0025                     ??_ISR:
   617                           
   618                           ; 1 bytes @ 0x5
   619  0025                     	ds	4
   620  0029                     ?_update_current_position:
   621  0029                     ??_soft_uart_send_uint8_t:	
   622                           ; 1 bytes @ 0x9
   623                           
   624  0029                     update_current_position@value:	
   625                           ; 1 bytes @ 0x9
   626                           
   627                           
   628                           ; 2 bytes @ 0x9
   629  0029                     	ds	1
   630  002A                     soft_uart_send_uint8_t@value:
   631                           
   632                           ; 1 bytes @ 0xA
   633  002A                     	ds	1
   634  002B                     ??_start_timer:
   635  002B                     soft_uart_send_uint8_t@bit_counter:	
   636                           ; 1 bytes @ 0xB
   637                           
   638                           
   639                           ; 1 bytes @ 0xB
   640  002B                     	ds	1
   641  002C                     ??_soft_uart_send_string:
   642  002C                     ?_soft_uart_send_int:	
   643                           ; 1 bytes @ 0xC
   644                           
   645  002C                     soft_uart_send_int@value:	
   646                           ; 1 bytes @ 0xC
   647                           
   648                           
   649                           ; 2 bytes @ 0xC
   650  002C                     	ds	1
   651  002D                     soft_uart_send_string@i:
   652                           
   653                           ; 1 bytes @ 0xD
   654  002D                     	ds	1
   655  002E                     ??_soft_uart_send_int:
   656  002E                     soft_uart_send_string@string:	
   657                           ; 1 bytes @ 0xE
   658                           
   659                           
   660                           ; 1 bytes @ 0xE
   661  002E                     	ds	1
   662  002F                     soft_uart_send_int@nums:
   663                           
   664                           ; 3 bytes @ 0xF
   665  002F                     	ds	3
   666  0032                     soft_uart_send_int@index:
   667                           
   668                           ; 1 bytes @ 0x12
   669  0032                     	ds	1
   670  0033                     ??_main:
   671                           
   672                           ; 1 bytes @ 0x13
   673  0033                     	ds	3
   674                           
   675                           	psect	maintext
   676  0107                     __pmaintext:	
   677 ;;
   678 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   679 ;;
   680 ;; *************** function _main *****************
   681 ;; Defined at:
   682 ;;		line 11 in file "main.c"
   683 ;; Parameters:    Size  Location     Type
   684 ;;		None
   685 ;; Auto vars:     Size  Location     Type
   686 ;;		None
   687 ;; Return value:  Size  Location     Type
   688 ;;                  1    wreg      void 
   689 ;; Registers used:
   690 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   691 ;; Tracked objects:
   692 ;;		On entry : B00/0
   693 ;;		On exit  : 0/0
   694 ;;		Unchanged: 0/0
   695 ;; Data sizes:     COMMON   BANK0
   696 ;;      Params:         0       0
   697 ;;      Locals:         0       0
   698 ;;      Temps:          0       3
   699 ;;      Totals:         0       3
   700 ;;Total ram usage:        3 bytes
   701 ;; Hardware stack levels required when called: 5
   702 ;; This function calls:
   703 ;;		_TMR1_init
   704 ;;		_adc_deinit
   705 ;;		_coil_init
   706 ;;		_comparator_deinit
   707 ;;		_interrupt_init
   708 ;;		_reset_all_pins
   709 ;;		_retrieve_current_position
   710 ;;		_soft_uart_init
   711 ;;		_soft_uart_send_int
   712 ;;		_soft_uart_send_string
   713 ;;		_start_timer
   714 ;; This function is called by:
   715 ;;		Startup code after reset
   716 ;; This function uses a non-reentrant model
   717 ;;
   718                           
   719  0107                     _main:	
   720                           ;psect for function _main
   721                           
   722  0107                     l1185:	
   723                           ;incstack = 0
   724                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   725                           
   726                           
   727                           ;main.c: 14:     coil_init();
   728  0107  21BC               	fcall	_coil_init
   729  0108                     l1187:
   730                           
   731                           ;main.c: 15:     comparator_deinit();
   732  0108  21EA               	fcall	_comparator_deinit
   733  0109                     l1189:
   734                           
   735                           ;main.c: 16:     interrupt_init();
   736  0109  21CF               	fcall	_interrupt_init
   737                           
   738                           ;main.c: 17:     TMR1_init();
   739  010A  21A8               	fcall	_TMR1_init
   740                           
   741                           ;main.c: 18:     adc_deinit();
   742  010B  21D5               	fcall	_adc_deinit
   743  010C                     l1191:
   744                           
   745                           ;main.c: 20:     soft_uart_init();
   746  010C  21E1               	fcall	_soft_uart_init
   747  010D                     l1193:
   748                           
   749                           ;main.c: 24:     reset_all_pins();
   750  010D  21C9               	fcall	_reset_all_pins
   751  010E                     l1195:
   752                           
   753                           ;main.c: 27:     _delay((unsigned long)((2000)*(4000000/4000.0)));
   754  010E  300B               	movlw	11
   755  010F  1283               	bcf	3,5	;RP0=0, select bank0
   756  0110  00B5               	movwf	??_main+2
   757  0111  3026               	movlw	38
   758  0112  00B4               	movwf	??_main+1
   759  0113  305D               	movlw	93
   760  0114  00B3               	movwf	??_main
   761  0115                     u337:
   762  0115  0BB3               	decfsz	??_main,f
   763  0116  2915               	goto	u337
   764  0117  0BB4               	decfsz	??_main+1,f
   765  0118  2915               	goto	u337
   766  0119  0BB5               	decfsz	??_main+2,f
   767  011A  2915               	goto	u337
   768  011B  291C               	nop2
   769                           
   770                           ;main.c: 28:     retrieve_current_position();
   771  011C  21E6               	fcall	_retrieve_current_position
   772  011D                     l1197:
   773                           
   774                           ;main.c: 33:         if(GPIO3 != CW_CCW_select) {
   775  011D  3000               	movlw	0
   776  011E  1283               	bcf	3,5	;RP0=0, select bank0
   777  011F  1985               	btfsc	5,3	;volatile
   778  0120  3001               	movlw	1
   779  0121  0650               	xorwf	_CW_CCW_select,w
   780  0122  1903               	skipnz
   781  0123  2925               	goto	u311
   782  0124  2926               	goto	u310
   783  0125                     u311:
   784  0125  292B               	goto	l1203
   785  0126                     u310:
   786  0126                     l1199:
   787                           
   788                           ;main.c: 34:             CW_CCW_select = GPIO3;
   789  0126  3000               	movlw	0
   790  0127  1985               	btfsc	5,3	;volatile
   791  0128  3001               	movlw	1
   792  0129  00D0               	movwf	_CW_CCW_select
   793  012A                     l1201:
   794                           
   795                           ;main.c: 35:             start_timer();
   796  012A  2087               	fcall	_start_timer
   797  012B                     l1203:
   798                           
   799                           ;main.c: 45:         soft_uart_send_string("OF_num_TMR1: ");
   800  012B  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   801  012C  215A               	fcall	_soft_uart_send_string
   802  012D                     l1205:
   803                           
   804                           ;main.c: 46:         soft_uart_send_int(OF_num_TMR1);
   805  012D  1283               	bcf	3,5	;RP0=0, select bank0
   806  012E  084C               	movf	_OF_num_TMR1+1,w
   807  012F  00AD               	movwf	soft_uart_send_int@value+1
   808  0130  084B               	movf	_OF_num_TMR1,w
   809  0131  00AC               	movwf	soft_uart_send_int@value
   810  0132  2140               	fcall	_soft_uart_send_int
   811  0133                     l1207:
   812                           
   813                           ;main.c: 47:         soft_uart_send_string(" \n");
   814  0133  300F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   815  0134  215A               	fcall	_soft_uart_send_string
   816  0135                     l1209:
   817                           
   818                           ;main.c: 49:         _delay((unsigned long)((5)*(4000000/4000.0)));
   819  0135  3007               	movlw	7
   820  0136  1283               	bcf	3,5	;RP0=0, select bank0
   821  0137  00B4               	movwf	??_main+1
   822  0138  307D               	movlw	125
   823  0139  00B3               	movwf	??_main
   824  013A                     u347:
   825  013A  0BB3               	decfsz	??_main,f
   826  013B  293A               	goto	u347
   827  013C  0BB4               	decfsz	??_main+1,f
   828  013D  293A               	goto	u347
   829  013E  291D               	goto	l1197
   830  013F  280F               	ljmp	start
   831  0140                     __end_of_main:
   832                           
   833                           	psect	text1
   834  0087                     __ptext1:	
   835 ;; *************** function _start_timer *****************
   836 ;; Defined at:
   837 ;;		line 14 in file "tmr1_module.c"
   838 ;; Parameters:    Size  Location     Type
   839 ;;		None
   840 ;; Auto vars:     Size  Location     Type
   841 ;;		None
   842 ;; Return value:  Size  Location     Type
   843 ;;                  1    wreg      void 
   844 ;; Registers used:
   845 ;;		wreg, status,2, status,0, pclath, cstack
   846 ;; Tracked objects:
   847 ;;		On entry : 0/0
   848 ;;		On exit  : 0/0
   849 ;;		Unchanged: 0/0
   850 ;; Data sizes:     COMMON   BANK0
   851 ;;      Params:         0       0
   852 ;;      Locals:         0       0
   853 ;;      Temps:          0       1
   854 ;;      Totals:         0       1
   855 ;;Total ram usage:        1 bytes
   856 ;; Hardware stack levels used: 1
   857 ;; Hardware stack levels required when called: 4
   858 ;; This function calls:
   859 ;;		_update_current_position
   860 ;; This function is called by:
   861 ;;		_main
   862 ;; This function uses a non-reentrant model
   863 ;;
   864                           
   865  0087                     _start_timer:	
   866                           ;psect for function _start_timer
   867                           
   868  0087                     l1127:	
   869                           ;incstack = 0
   870                           ; Regs used in _start_timer: [wreg+status,2+status,0+pclath+cstack]
   871                           
   872                           
   873                           ;tmr1_module.c: 16:     if (CW_CCW_select) {
   874  0087  1283               	bcf	3,5	;RP0=0, select bank0
   875  0088  0850               	movf	_CW_CCW_select,w
   876  0089  1903               	btfsc	3,2
   877  008A  288C               	goto	u211
   878  008B  288D               	goto	u210
   879  008C                     u211:
   880  008C  28A0               	goto	l1133
   881  008D                     u210:
   882  008D                     l1129:
   883                           
   884                           ;tmr1_module.c: 18:         update_current_position(current_position - OF_num_TMR1);
   885  008D  084B               	movf	_OF_num_TMR1,w
   886  008E  0249               	subwf	_current_position,w
   887  008F  00A9               	movwf	update_current_position@value
   888  0090  084C               	movf	_OF_num_TMR1+1,w
   889  0091  1C03               	skipc
   890  0092  0A4C               	incf	_OF_num_TMR1+1,w
   891  0093  024A               	subwf	_current_position+1,w
   892  0094  00AA               	movwf	update_current_position@value+1
   893  0095  21C3               	fcall	_update_current_position
   894  0096                     l1131:
   895                           
   896                           ;tmr1_module.c: 24:         target_OF_num = num_steps[1] - current_position;
   897  0096  1283               	bcf	3,5	;RP0=0, select bank0
   898  0097  0849               	movf	_current_position,w
   899  0098  0240               	subwf	_num_steps+2,w
   900  0099  00C2               	movwf	_target_OF_num
   901  009A  084A               	movf	_current_position+1,w
   902  009B  1C03               	skipc
   903  009C  0A4A               	incf	_current_position+1,w
   904  009D  0241               	subwf	_num_steps+3,w
   905  009E  00C3               	movwf	_target_OF_num+1
   906                           
   907                           ;tmr1_module.c: 27:     } else {
   908  009F  28C3               	goto	l1141
   909  00A0                     l1133:
   910                           
   911                           ;tmr1_module.c: 29:         update_current_position(current_position + OF_num_TMR1);
   912  00A0  084B               	movf	_OF_num_TMR1,w
   913  00A1  0749               	addwf	_current_position,w
   914  00A2  00A9               	movwf	update_current_position@value
   915  00A3  084C               	movf	_OF_num_TMR1+1,w
   916  00A4  1803               	skipnc
   917  00A5  0A4C               	incf	_OF_num_TMR1+1,w
   918  00A6  074A               	addwf	_current_position+1,w
   919  00A7  00AA               	movwf	update_current_position@value+1
   920  00A8  21C3               	fcall	_update_current_position
   921  00A9                     l1135:
   922                           
   923                           ;tmr1_module.c: 35:         if (current_position > num_steps[0]) {
   924  00A9  1283               	bcf	3,5	;RP0=0, select bank0
   925  00AA  083F               	movf	_num_steps+1,w
   926  00AB  3A80               	xorlw	128
   927  00AC  00AB               	movwf	??_start_timer
   928  00AD  084A               	movf	_current_position+1,w
   929  00AE  3A80               	xorlw	128
   930  00AF  022B               	subwf	??_start_timer,w
   931  00B0  1D03               	skipz
   932  00B1  28B4               	goto	u225
   933  00B2  0849               	movf	_current_position,w
   934  00B3  023E               	subwf	_num_steps,w
   935  00B4                     u225:
   936  00B4  1803               	skipnc
   937  00B5  28B7               	goto	u221
   938  00B6  28B8               	goto	u220
   939  00B7                     u221:
   940  00B7  28BE               	goto	l1139
   941  00B8                     u220:
   942  00B8                     l1137:
   943                           
   944                           ;tmr1_module.c: 36:             target_OF_num = num_steps[0];
   945  00B8  1283               	bcf	3,5	;RP0=0, select bank0
   946  00B9  083F               	movf	_num_steps+1,w
   947  00BA  00C3               	movwf	_target_OF_num+1
   948  00BB  083E               	movf	_num_steps,w
   949  00BC  00C2               	movwf	_target_OF_num
   950                           
   951                           ;tmr1_module.c: 37:         } else {
   952  00BD  28C3               	goto	l1141
   953  00BE                     l1139:
   954                           
   955                           ;tmr1_module.c: 38:             target_OF_num = current_position;
   956  00BE  1283               	bcf	3,5	;RP0=0, select bank0
   957  00BF  084A               	movf	_current_position+1,w
   958  00C0  00C3               	movwf	_target_OF_num+1
   959  00C1  0849               	movf	_current_position,w
   960  00C2  00C2               	movwf	_target_OF_num
   961  00C3                     l1141:
   962                           
   963                           ;tmr1_module.c: 44:     OF_num_TMR1 = 0;
   964  00C3  01CB               	clrf	_OF_num_TMR1
   965  00C4  01CC               	clrf	_OF_num_TMR1+1
   966  00C5                     l1143:
   967                           
   968                           ;tmr1_module.c: 47:     TMR1ON = 1;
   969  00C5  1410               	bsf	16,0	;volatile
   970  00C6                     l260:
   971  00C6  0008               	return
   972  00C7                     __end_of_start_timer:
   973                           
   974                           	psect	text2
   975  01C3                     __ptext2:	
   976 ;; *************** function _update_current_position *****************
   977 ;; Defined at:
   978 ;;		line 59 in file "tmr1_module.c"
   979 ;; Parameters:    Size  Location     Type
   980 ;;  value           2    9[BANK0 ] int 
   981 ;; Auto vars:     Size  Location     Type
   982 ;;		None
   983 ;; Return value:  Size  Location     Type
   984 ;;                  1    wreg      void 
   985 ;; Registers used:
   986 ;;		wreg
   987 ;; Tracked objects:
   988 ;;		On entry : 0/0
   989 ;;		On exit  : 0/0
   990 ;;		Unchanged: 0/0
   991 ;; Data sizes:     COMMON   BANK0
   992 ;;      Params:         0       2
   993 ;;      Locals:         0       0
   994 ;;      Temps:          0       0
   995 ;;      Totals:         0       2
   996 ;;Total ram usage:        2 bytes
   997 ;; Hardware stack levels used: 1
   998 ;; Hardware stack levels required when called: 3
   999 ;; This function calls:
  1000 ;;		Nothing
  1001 ;; This function is called by:
  1002 ;;		_start_timer
  1003 ;; This function uses a non-reentrant model
  1004 ;;
  1005                           
  1006  01C3                     _update_current_position:	
  1007                           ;psect for function _update_current_position
  1008                           
  1009  01C3                     l1077:	
  1010                           ;incstack = 0
  1011                           ; Regs used in _update_current_position: [wreg]
  1012                           
  1013                           
  1014                           ;tmr1_module.c: 61:     current_position = value;
  1015  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  1016  01C4  082A               	movf	update_current_position@value+1,w
  1017  01C5  00CA               	movwf	_current_position+1
  1018  01C6  0829               	movf	update_current_position@value,w
  1019  01C7  00C9               	movwf	_current_position
  1020  01C8                     l269:
  1021  01C8  0008               	return
  1022  01C9                     __end_of_update_current_position:
  1023                           
  1024                           	psect	text3
  1025  015A                     __ptext3:	
  1026 ;; *************** function _soft_uart_send_string *****************
  1027 ;; Defined at:
  1028 ;;		line 62 in file "software_uart.c"
  1029 ;; Parameters:    Size  Location     Type
  1030 ;;  string          1    wreg     PTR unsigned char 
  1031 ;;		 -> STR_2(3), STR_1(14), 
  1032 ;; Auto vars:     Size  Location     Type
  1033 ;;  string          1   14[BANK0 ] PTR unsigned char 
  1034 ;;		 -> STR_2(3), STR_1(14), 
  1035 ;;  i               1   13[BANK0 ] unsigned char 
  1036 ;; Return value:  Size  Location     Type
  1037 ;;                  1    wreg      void 
  1038 ;; Registers used:
  1039 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1040 ;; Tracked objects:
  1041 ;;		On entry : 0/0
  1042 ;;		On exit  : 0/0
  1043 ;;		Unchanged: 0/0
  1044 ;; Data sizes:     COMMON   BANK0
  1045 ;;      Params:         0       0
  1046 ;;      Locals:         0       2
  1047 ;;      Temps:          0       1
  1048 ;;      Totals:         0       3
  1049 ;;Total ram usage:        3 bytes
  1050 ;; Hardware stack levels used: 1
  1051 ;; Hardware stack levels required when called: 4
  1052 ;; This function calls:
  1053 ;;		_soft_uart_send_uint8_t
  1054 ;; This function is called by:
  1055 ;;		_main
  1056 ;; This function uses a non-reentrant model
  1057 ;;
  1058                           
  1059  015A                     _soft_uart_send_string:	
  1060                           ;psect for function _soft_uart_send_string
  1061                           
  1062                           
  1063                           ;incstack = 0
  1064                           ; Regs used in _soft_uart_send_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1065                           ;soft_uart_send_string@string stored from wreg
  1066  015A  1283               	bcf	3,5	;RP0=0, select bank0
  1067  015B  00AE               	movwf	soft_uart_send_string@string
  1068  015C                     l1145:
  1069                           
  1070                           ;software_uart.c: 64:     uint8_t i = 0;
  1071  015C  01AD               	clrf	soft_uart_send_string@i
  1072                           
  1073                           ;software_uart.c: 65:     while (string[i] != '\0') {
  1074  015D  2968               	goto	l1151
  1075  015E                     l1147:
  1076                           
  1077                           ;software_uart.c: 67:         soft_uart_send_uint8_t((uint8_t)string[i]);
  1078  015E  082D               	movf	soft_uart_send_string@i,w
  1079  015F  072E               	addwf	soft_uart_send_string@string,w
  1080  0160  0084               	movwf	4
  1081  0161  2172               	fcall	stringdir
  1082  0162  20C7               	fcall	_soft_uart_send_uint8_t
  1083  0163                     l1149:
  1084                           
  1085                           ;software_uart.c: 68:         i++;
  1086  0163  3001               	movlw	1
  1087  0164  1283               	bcf	3,5	;RP0=0, select bank0
  1088  0165  00AC               	movwf	??_soft_uart_send_string
  1089  0166  082C               	movf	??_soft_uart_send_string,w
  1090  0167  07AD               	addwf	soft_uart_send_string@i,f
  1091  0168                     l1151:
  1092                           
  1093                           ;software_uart.c: 65:     while (string[i] != '\0') {
  1094  0168  082D               	movf	soft_uart_send_string@i,w
  1095  0169  072E               	addwf	soft_uart_send_string@string,w
  1096  016A  0084               	movwf	4
  1097  016B  2172               	fcall	stringdir
  1098  016C  3A00               	xorlw	0
  1099  016D  1D03               	skipz
  1100  016E  2970               	goto	u231
  1101  016F  2971               	goto	u230
  1102  0170                     u231:
  1103  0170  295E               	goto	l1147
  1104  0171                     u230:
  1105  0171                     l323:
  1106  0171  0008               	return
  1107  0172                     __end_of_soft_uart_send_string:
  1108                           
  1109                           	psect	text4
  1110  0140                     __ptext4:	
  1111 ;; *************** function _soft_uart_send_int *****************
  1112 ;; Defined at:
  1113 ;;		line 40 in file "software_uart.c"
  1114 ;; Parameters:    Size  Location     Type
  1115 ;;  value           2   12[BANK0 ] int 
  1116 ;; Auto vars:     Size  Location     Type
  1117 ;;  nums            3   15[BANK0 ] PTR unsigned char [3]
  1118 ;;		 -> NULL(0), 
  1119 ;;  index           1   18[BANK0 ] unsigned char 
  1120 ;;  mod             1    0        unsigned char 
  1121 ;; Return value:  Size  Location     Type
  1122 ;;                  1    wreg      void 
  1123 ;; Registers used:
  1124 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1125 ;; Tracked objects:
  1126 ;;		On entry : 0/0
  1127 ;;		On exit  : 0/0
  1128 ;;		Unchanged: 0/0
  1129 ;; Data sizes:     COMMON   BANK0
  1130 ;;      Params:         0       2
  1131 ;;      Locals:         0       4
  1132 ;;      Temps:          0       1
  1133 ;;      Totals:         0       7
  1134 ;;Total ram usage:        7 bytes
  1135 ;; Hardware stack levels used: 1
  1136 ;; Hardware stack levels required when called: 4
  1137 ;; This function calls:
  1138 ;;		_soft_uart_send_uint8_t
  1139 ;; This function is called by:
  1140 ;;		_main
  1141 ;; This function uses a non-reentrant model
  1142 ;;
  1143                           
  1144  0140                     _soft_uart_send_int:	
  1145                           ;psect for function _soft_uart_send_int
  1146                           
  1147  0140                     l1153:	
  1148                           ;incstack = 0
  1149                           ; Regs used in _soft_uart_send_int: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1150                           
  1151                           
  1152                           ;software_uart.c: 43:     uint8_t mod;;software_uart.c: 44:     uint8_t* nums[3] = {0, 0
      +                          , 0};
  1153  0140  3000               	movlw	0
  1154  0141  1283               	bcf	3,5	;RP0=0, select bank0
  1155  0142  00AF               	movwf	soft_uart_send_int@nums
  1156  0143  3000               	movlw	0
  1157  0144  00B0               	movwf	soft_uart_send_int@nums+1
  1158  0145  3000               	movlw	0
  1159  0146  00B1               	movwf	soft_uart_send_int@nums+2
  1160  0147                     l1155:
  1161                           
  1162                           ;software_uart.c: 56:     for(index=0; index<3; index++) {
  1163  0147  01B2               	clrf	soft_uart_send_int@index
  1164  0148                     l1161:
  1165                           
  1166                           ;software_uart.c: 57:         soft_uart_send_uint8_t(nums[index]);
  1167  0148  0832               	movf	soft_uart_send_int@index,w
  1168  0149  3E2F               	addlw	(low (soft_uart_send_int@nums| 0))& (0+255)
  1169  014A  0084               	movwf	4
  1170  014B  1383               	bcf	3,7	;select IRP bank0
  1171  014C  0800               	movf	0,w
  1172  014D  20C7               	fcall	_soft_uart_send_uint8_t
  1173  014E                     l1163:
  1174                           
  1175                           ;software_uart.c: 58:     }
  1176  014E  3001               	movlw	1
  1177  014F  1283               	bcf	3,5	;RP0=0, select bank0
  1178  0150  00AE               	movwf	??_soft_uart_send_int
  1179  0151  082E               	movf	??_soft_uart_send_int,w
  1180  0152  07B2               	addwf	soft_uart_send_int@index,f
  1181  0153                     l1165:
  1182  0153  3003               	movlw	3
  1183  0154  0232               	subwf	soft_uart_send_int@index,w
  1184  0155  1C03               	skipc
  1185  0156  2958               	goto	u241
  1186  0157  2959               	goto	u240
  1187  0158                     u241:
  1188  0158  2948               	goto	l1161
  1189  0159                     u240:
  1190  0159                     l317:
  1191  0159  0008               	return
  1192  015A                     __end_of_soft_uart_send_int:
  1193                           
  1194                           	psect	text5
  1195  00C7                     __ptext5:	
  1196 ;; *************** function _soft_uart_send_uint8_t *****************
  1197 ;; Defined at:
  1198 ;;		line 19 in file "software_uart.c"
  1199 ;; Parameters:    Size  Location     Type
  1200 ;;  value           1    wreg     unsigned char 
  1201 ;; Auto vars:     Size  Location     Type
  1202 ;;  value           1   10[BANK0 ] unsigned char 
  1203 ;;  bit_counter     1   11[BANK0 ] unsigned char 
  1204 ;; Return value:  Size  Location     Type
  1205 ;;                  1    wreg      void 
  1206 ;; Registers used:
  1207 ;;		wreg, status,2, status,0
  1208 ;; Tracked objects:
  1209 ;;		On entry : 0/0
  1210 ;;		On exit  : 0/0
  1211 ;;		Unchanged: 0/0
  1212 ;; Data sizes:     COMMON   BANK0
  1213 ;;      Params:         0       0
  1214 ;;      Locals:         0       2
  1215 ;;      Temps:          0       1
  1216 ;;      Totals:         0       3
  1217 ;;Total ram usage:        3 bytes
  1218 ;; Hardware stack levels used: 1
  1219 ;; Hardware stack levels required when called: 3
  1220 ;; This function calls:
  1221 ;;		Nothing
  1222 ;; This function is called by:
  1223 ;;		_soft_uart_send_int
  1224 ;;		_soft_uart_send_string
  1225 ;; This function uses a non-reentrant model
  1226 ;;
  1227                           
  1228  00C7                     _soft_uart_send_uint8_t:	
  1229                           ;psect for function _soft_uart_send_uint8_t
  1230                           
  1231                           
  1232                           ;incstack = 0
  1233                           ; Regs used in _soft_uart_send_uint8_t: [wreg+status,2+status,0]
  1234                           ;soft_uart_send_uint8_t@value stored from wreg
  1235  00C7  1283               	bcf	3,5	;RP0=0, select bank0
  1236  00C8  00AA               	movwf	soft_uart_send_uint8_t@value
  1237  00C9                     l1079:
  1238                           
  1239                           ;software_uart.c: 22:     GPIO5 = 0;
  1240  00C9  1285               	bcf	5,5	;volatile
  1241  00CA                     l1081:
  1242                           
  1243                           ;software_uart.c: 23:     _delay((unsigned long)((905)*(4000000/4000000.0)));
  1244  00CA  30B4               	movlw	180
  1245  00CB  00A9               	movwf	??_soft_uart_send_uint8_t
  1246  00CC                     u357:
  1247  00CC  28CD               	nop2
  1248  00CD  0BA9               	decfsz	??_soft_uart_send_uint8_t,f
  1249  00CE  28CC               	goto	u357
  1250  00CF  28D0               	nop2
  1251  00D0  28D1               	nop2
  1252  00D1                     l1083:
  1253                           
  1254                           ;software_uart.c: 26:     for(uint8_t bit_counter=0; bit_counter<8; bit_counter++) {
  1255  00D1  1283               	bcf	3,5	;RP0=0, select bank0
  1256  00D2  01AB               	clrf	soft_uart_send_uint8_t@bit_counter
  1257  00D3                     l1089:
  1258                           
  1259                           ;software_uart.c: 28:         GPIO5 = (value>>bit_counter) & 0b1;
  1260  00D3  082A               	movf	soft_uart_send_uint8_t@value,w
  1261  00D4  00A9               	movwf	??_soft_uart_send_uint8_t
  1262  00D5  0A2B               	incf	soft_uart_send_uint8_t@bit_counter,w
  1263  00D6  28D9               	goto	u174
  1264  00D7                     u175:
  1265  00D7  1003               	clrc
  1266  00D8  0CA9               	rrf	??_soft_uart_send_uint8_t,f
  1267  00D9                     u174:
  1268  00D9  3EFF               	addlw	-1
  1269  00DA  1D03               	skipz
  1270  00DB  28D7               	goto	u175
  1271  00DC  1829               	btfsc	??_soft_uart_send_uint8_t,0
  1272  00DD  28DF               	goto	u181
  1273  00DE  28E2               	goto	u180
  1274  00DF                     u181:
  1275  00DF  1283               	bcf	3,5	;RP0=0, select bank0
  1276  00E0  1685               	bsf	5,5	;volatile
  1277  00E1  28E4               	goto	u194
  1278  00E2                     u180:
  1279  00E2  1283               	bcf	3,5	;RP0=0, select bank0
  1280  00E3  1285               	bcf	5,5	;volatile
  1281  00E4                     u194:
  1282  00E4                     l1091:
  1283                           
  1284                           ;software_uart.c: 30:         _delay((unsigned long)((905)*(4000000/4000000.0)));
  1285  00E4  30B4               	movlw	180
  1286  00E5  00A9               	movwf	??_soft_uart_send_uint8_t
  1287  00E6                     u367:
  1288  00E6  28E7               	nop2
  1289  00E7  0BA9               	decfsz	??_soft_uart_send_uint8_t,f
  1290  00E8  28E6               	goto	u367
  1291  00E9  28EA               	nop2
  1292  00EA  28EB               	nop2
  1293  00EB                     l1093:
  1294                           
  1295                           ;software_uart.c: 31:     }
  1296  00EB  3001               	movlw	1
  1297  00EC  1283               	bcf	3,5	;RP0=0, select bank0
  1298  00ED  00A9               	movwf	??_soft_uart_send_uint8_t
  1299  00EE  0829               	movf	??_soft_uart_send_uint8_t,w
  1300  00EF  07AB               	addwf	soft_uart_send_uint8_t@bit_counter,f
  1301  00F0  3008               	movlw	8
  1302  00F1  022B               	subwf	soft_uart_send_uint8_t@bit_counter,w
  1303  00F2  1C03               	skipc
  1304  00F3  28F5               	goto	u201
  1305  00F4  28F6               	goto	u200
  1306  00F5                     u201:
  1307  00F5  28D3               	goto	l1089
  1308  00F6                     u200:
  1309  00F6                     l309:
  1310                           
  1311                           ;software_uart.c: 34:     GPIO5 = 1;
  1312  00F6  1685               	bsf	5,5	;volatile
  1313  00F7                     l1095:
  1314                           
  1315                           ;software_uart.c: 35:     _delay((unsigned long)((905)*(4000000/4000000.0)));
  1316  00F7  30B4               	movlw	180
  1317  00F8  00A9               	movwf	??_soft_uart_send_uint8_t
  1318  00F9                     u377:
  1319  00F9  28FA               	nop2
  1320  00FA  0BA9               	decfsz	??_soft_uart_send_uint8_t,f
  1321  00FB  28F9               	goto	u377
  1322  00FC  28FD               	nop2
  1323  00FD  28FE               	nop2
  1324                           
  1325                           ;software_uart.c: 36:     _delay((unsigned long)((905)*(4000000/4000000.0)));
  1326  00FE  30B4               	movlw	180
  1327  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  1328  0100  00A9               	movwf	??_soft_uart_send_uint8_t
  1329  0101                     u387:
  1330  0101  2902               	nop2
  1331  0102  0BA9               	decfsz	??_soft_uart_send_uint8_t,f
  1332  0103  2901               	goto	u387
  1333  0104  2905               	nop2
  1334  0105  2906               	nop2
  1335  0106                     l310:
  1336  0106  0008               	return
  1337  0107                     __end_of_soft_uart_send_uint8_t:
  1338                           
  1339                           	psect	text6
  1340  01E1                     __ptext6:	
  1341 ;; *************** function _soft_uart_init *****************
  1342 ;; Defined at:
  1343 ;;		line 11 in file "software_uart.c"
  1344 ;; Parameters:    Size  Location     Type
  1345 ;;		None
  1346 ;; Auto vars:     Size  Location     Type
  1347 ;;		None
  1348 ;; Return value:  Size  Location     Type
  1349 ;;                  1    wreg      void 
  1350 ;; Registers used:
  1351 ;;		None
  1352 ;; Tracked objects:
  1353 ;;		On entry : 0/0
  1354 ;;		On exit  : 0/0
  1355 ;;		Unchanged: 0/0
  1356 ;; Data sizes:     COMMON   BANK0
  1357 ;;      Params:         0       0
  1358 ;;      Locals:         0       0
  1359 ;;      Temps:          0       0
  1360 ;;      Totals:         0       0
  1361 ;;Total ram usage:        0 bytes
  1362 ;; Hardware stack levels used: 1
  1363 ;; Hardware stack levels required when called: 3
  1364 ;; This function calls:
  1365 ;;		Nothing
  1366 ;; This function is called by:
  1367 ;;		_main
  1368 ;; This function uses a non-reentrant model
  1369 ;;
  1370                           
  1371  01E1                     _soft_uart_init:	
  1372                           ;psect for function _soft_uart_init
  1373                           
  1374  01E1                     l1121:	
  1375                           ;incstack = 0
  1376                           ; Regs used in _soft_uart_init: []
  1377                           
  1378                           
  1379                           ;software_uart.c: 14:     TRISIO5 = 0;
  1380  01E1  1683               	bsf	3,5	;RP0=1, select bank1
  1381  01E2  1285               	bcf	5,5	;volatile
  1382                           
  1383                           ;software_uart.c: 15:     GPIO5 = 1;
  1384  01E3  1283               	bcf	3,5	;RP0=0, select bank0
  1385  01E4  1685               	bsf	5,5	;volatile
  1386  01E5                     l305:
  1387  01E5  0008               	return
  1388  01E6                     __end_of_soft_uart_init:
  1389                           
  1390                           	psect	text7
  1391  01E6                     __ptext7:	
  1392 ;; *************** function _retrieve_current_position *****************
  1393 ;; Defined at:
  1394 ;;		line 54 in file "tmr1_module.c"
  1395 ;; Parameters:    Size  Location     Type
  1396 ;;		None
  1397 ;; Auto vars:     Size  Location     Type
  1398 ;;		None
  1399 ;; Return value:  Size  Location     Type
  1400 ;;                  1    wreg      void 
  1401 ;; Registers used:
  1402 ;;		status,2
  1403 ;; Tracked objects:
  1404 ;;		On entry : 0/0
  1405 ;;		On exit  : 0/0
  1406 ;;		Unchanged: 0/0
  1407 ;; Data sizes:     COMMON   BANK0
  1408 ;;      Params:         0       0
  1409 ;;      Locals:         0       0
  1410 ;;      Temps:          0       0
  1411 ;;      Totals:         0       0
  1412 ;;Total ram usage:        0 bytes
  1413 ;; Hardware stack levels used: 1
  1414 ;; Hardware stack levels required when called: 3
  1415 ;; This function calls:
  1416 ;;		Nothing
  1417 ;; This function is called by:
  1418 ;;		_main
  1419 ;; This function uses a non-reentrant model
  1420 ;;
  1421                           
  1422  01E6                     _retrieve_current_position:	
  1423                           ;psect for function _retrieve_current_position
  1424                           
  1425  01E6                     l1125:	
  1426                           ;incstack = 0
  1427                           ; Regs used in _retrieve_current_position: [status,2]
  1428                           
  1429                           
  1430                           ;tmr1_module.c: 56:     current_position = 0;
  1431  01E6  1283               	bcf	3,5	;RP0=0, select bank0
  1432  01E7  01C9               	clrf	_current_position
  1433  01E8  01CA               	clrf	_current_position+1
  1434  01E9                     l266:
  1435  01E9  0008               	return
  1436  01EA                     __end_of_retrieve_current_position:
  1437                           
  1438                           	psect	text8
  1439  01C9                     __ptext8:	
  1440 ;; *************** function _reset_all_pins *****************
  1441 ;; Defined at:
  1442 ;;		line 55 in file "coil_control.c"
  1443 ;; Parameters:    Size  Location     Type
  1444 ;;		None
  1445 ;; Auto vars:     Size  Location     Type
  1446 ;;		None
  1447 ;; Return value:  Size  Location     Type
  1448 ;;                  1    wreg      void 
  1449 ;; Registers used:
  1450 ;;		None
  1451 ;; Tracked objects:
  1452 ;;		On entry : 0/0
  1453 ;;		On exit  : 0/0
  1454 ;;		Unchanged: 0/0
  1455 ;; Data sizes:     COMMON   BANK0
  1456 ;;      Params:         0       0
  1457 ;;      Locals:         0       0
  1458 ;;      Temps:          0       0
  1459 ;;      Totals:         0       0
  1460 ;;Total ram usage:        0 bytes
  1461 ;; Hardware stack levels used: 1
  1462 ;; Hardware stack levels required when called: 3
  1463 ;; This function calls:
  1464 ;;		Nothing
  1465 ;; This function is called by:
  1466 ;;		_main
  1467 ;; This function uses a non-reentrant model
  1468 ;;
  1469                           
  1470  01C9                     _reset_all_pins:	
  1471                           ;psect for function _reset_all_pins
  1472                           
  1473  01C9                     l1123:	
  1474                           ;incstack = 0
  1475                           ; Regs used in _reset_all_pins: []
  1476                           
  1477                           
  1478                           ;coil_control.c: 56:     GPIO0 = 0;
  1479  01C9  1283               	bcf	3,5	;RP0=0, select bank0
  1480  01CA  1005               	bcf	5,0	;volatile
  1481                           
  1482                           ;coil_control.c: 57:     GPIO1 = 0;
  1483  01CB  1085               	bcf	5,1	;volatile
  1484                           
  1485                           ;coil_control.c: 58:     GPIO2 = 0;
  1486  01CC  1105               	bcf	5,2	;volatile
  1487                           
  1488                           ;coil_control.c: 59:     GPIO4 = 0;
  1489  01CD  1205               	bcf	5,4	;volatile
  1490  01CE                     l131:
  1491  01CE  0008               	return
  1492  01CF                     __end_of_reset_all_pins:
  1493                           
  1494                           	psect	text9
  1495  01CF                     __ptext9:	
  1496 ;; *************** function _interrupt_init *****************
  1497 ;; Defined at:
  1498 ;;		line 4 in file "interrupts.c"
  1499 ;; Parameters:    Size  Location     Type
  1500 ;;		None
  1501 ;; Auto vars:     Size  Location     Type
  1502 ;;		None
  1503 ;; Return value:  Size  Location     Type
  1504 ;;                  1    wreg      void 
  1505 ;; Registers used:
  1506 ;;		None
  1507 ;; Tracked objects:
  1508 ;;		On entry : 0/0
  1509 ;;		On exit  : 0/0
  1510 ;;		Unchanged: 0/0
  1511 ;; Data sizes:     COMMON   BANK0
  1512 ;;      Params:         0       0
  1513 ;;      Locals:         0       0
  1514 ;;      Temps:          0       0
  1515 ;;      Totals:         0       0
  1516 ;;Total ram usage:        0 bytes
  1517 ;; Hardware stack levels used: 1
  1518 ;; Hardware stack levels required when called: 3
  1519 ;; This function calls:
  1520 ;;		Nothing
  1521 ;; This function is called by:
  1522 ;;		_main
  1523 ;; This function uses a non-reentrant model
  1524 ;;
  1525                           
  1526  01CF                     _interrupt_init:	
  1527                           ;psect for function _interrupt_init
  1528                           
  1529  01CF                     l1103:	
  1530                           ;incstack = 0
  1531                           ; Regs used in _interrupt_init: []
  1532                           
  1533                           
  1534                           ;interrupts.c: 5:     GIE = 1;
  1535  01CF  178B               	bsf	11,7	;volatile
  1536                           
  1537                           ;interrupts.c: 6:     PEIE = 1;
  1538  01D0  170B               	bsf	11,6	;volatile
  1539                           
  1540                           ;interrupts.c: 7:     TMR0IE = 0;
  1541  01D1  128B               	bcf	11,5	;volatile
  1542                           
  1543                           ;interrupts.c: 8:     TMR1IE = 1;
  1544  01D2  1683               	bsf	3,5	;RP0=1, select bank1
  1545  01D3  140C               	bsf	12,0	;volatile
  1546  01D4                     l187:
  1547  01D4  0008               	return
  1548  01D5                     __end_of_interrupt_init:
  1549                           
  1550                           	psect	text10
  1551  01EA                     __ptext10:	
  1552 ;; *************** function _comparator_deinit *****************
  1553 ;; Defined at:
  1554 ;;		line 4 in file "comparator_module.c"
  1555 ;; Parameters:    Size  Location     Type
  1556 ;;		None
  1557 ;; Auto vars:     Size  Location     Type
  1558 ;;		None
  1559 ;; Return value:  Size  Location     Type
  1560 ;;                  1    wreg      void 
  1561 ;; Registers used:
  1562 ;;		wreg, status,2, status,0
  1563 ;; Tracked objects:
  1564 ;;		On entry : 0/0
  1565 ;;		On exit  : 0/0
  1566 ;;		Unchanged: 0/0
  1567 ;; Data sizes:     COMMON   BANK0
  1568 ;;      Params:         0       0
  1569 ;;      Locals:         0       0
  1570 ;;      Temps:          0       0
  1571 ;;      Totals:         0       0
  1572 ;;Total ram usage:        0 bytes
  1573 ;; Hardware stack levels used: 1
  1574 ;; Hardware stack levels required when called: 3
  1575 ;; This function calls:
  1576 ;;		Nothing
  1577 ;; This function is called by:
  1578 ;;		_main
  1579 ;; This function uses a non-reentrant model
  1580 ;;
  1581                           
  1582  01EA                     _comparator_deinit:	
  1583                           ;psect for function _comparator_deinit
  1584                           
  1585  01EA                     l1101:	
  1586                           ;incstack = 0
  1587                           ; Regs used in _comparator_deinit: [wreg+status,2+status,0]
  1588                           
  1589                           
  1590                           ;comparator_module.c: 5:     CMCONbits.CM = 0b111;
  1591  01EA  3007               	movlw	7
  1592  01EB  1283               	bcf	3,5	;RP0=0, select bank0
  1593  01EC  0499               	iorwf	25,f	;volatile
  1594  01ED                     l156:
  1595  01ED  0008               	return
  1596  01EE                     __end_of_comparator_deinit:
  1597                           
  1598                           	psect	text11
  1599  01BC                     __ptext11:	
  1600 ;; *************** function _coil_init *****************
  1601 ;; Defined at:
  1602 ;;		line 21 in file "coil_control.c"
  1603 ;; Parameters:    Size  Location     Type
  1604 ;;		None
  1605 ;; Auto vars:     Size  Location     Type
  1606 ;;		None
  1607 ;; Return value:  Size  Location     Type
  1608 ;;                  1    wreg      void 
  1609 ;; Registers used:
  1610 ;;		None
  1611 ;; Tracked objects:
  1612 ;;		On entry : 0/0
  1613 ;;		On exit  : 0/0
  1614 ;;		Unchanged: 0/0
  1615 ;; Data sizes:     COMMON   BANK0
  1616 ;;      Params:         0       0
  1617 ;;      Locals:         0       0
  1618 ;;      Temps:          0       0
  1619 ;;      Totals:         0       0
  1620 ;;Total ram usage:        0 bytes
  1621 ;; Hardware stack levels used: 1
  1622 ;; Hardware stack levels required when called: 3
  1623 ;; This function calls:
  1624 ;;		Nothing
  1625 ;; This function is called by:
  1626 ;;		_main
  1627 ;; This function uses a non-reentrant model
  1628 ;;
  1629                           
  1630  01BC                     _coil_init:	
  1631                           ;psect for function _coil_init
  1632                           
  1633  01BC                     l1099:	
  1634                           ;incstack = 0
  1635                           ; Regs used in _coil_init: []
  1636                           
  1637                           
  1638                           ;coil_control.c: 23:     TRISIO3 = 1;
  1639  01BC  1683               	bsf	3,5	;RP0=1, select bank1
  1640  01BD  1585               	bsf	5,3	;volatile
  1641                           
  1642                           ;coil_control.c: 24:     TRISIO0 = 0;
  1643  01BE  1005               	bcf	5,0	;volatile
  1644                           
  1645                           ;coil_control.c: 25:     TRISIO1 = 0;
  1646  01BF  1085               	bcf	5,1	;volatile
  1647                           
  1648                           ;coil_control.c: 26:     TRISIO2 = 0;
  1649  01C0  1105               	bcf	5,2	;volatile
  1650                           
  1651                           ;coil_control.c: 27:     TRISIO4 = 0;
  1652  01C1  1205               	bcf	5,4	;volatile
  1653  01C2                     l116:
  1654  01C2  0008               	return
  1655  01C3                     __end_of_coil_init:
  1656                           
  1657                           	psect	text12
  1658  01D5                     __ptext12:	
  1659 ;; *************** function _adc_deinit *****************
  1660 ;; Defined at:
  1661 ;;		line 4 in file "adc_module.c"
  1662 ;; Parameters:    Size  Location     Type
  1663 ;;		None
  1664 ;; Auto vars:     Size  Location     Type
  1665 ;;		None
  1666 ;; Return value:  Size  Location     Type
  1667 ;;                  1    wreg      void 
  1668 ;; Registers used:
  1669 ;;		wreg, status,2, status,0
  1670 ;; Tracked objects:
  1671 ;;		On entry : 0/0
  1672 ;;		On exit  : 0/0
  1673 ;;		Unchanged: 0/0
  1674 ;; Data sizes:     COMMON   BANK0
  1675 ;;      Params:         0       0
  1676 ;;      Locals:         0       0
  1677 ;;      Temps:          0       0
  1678 ;;      Totals:         0       0
  1679 ;;Total ram usage:        0 bytes
  1680 ;; Hardware stack levels used: 1
  1681 ;; Hardware stack levels required when called: 3
  1682 ;; This function calls:
  1683 ;;		Nothing
  1684 ;; This function is called by:
  1685 ;;		_main
  1686 ;; This function uses a non-reentrant model
  1687 ;;
  1688                           
  1689  01D5                     _adc_deinit:	
  1690                           ;psect for function _adc_deinit
  1691                           
  1692  01D5                     l1117:	
  1693                           ;incstack = 0
  1694                           ; Regs used in _adc_deinit: [wreg+status,2+status,0]
  1695                           
  1696                           
  1697                           ;adc_module.c: 5:     ADON = 0;
  1698  01D5  1283               	bcf	3,5	;RP0=0, select bank0
  1699  01D6  101F               	bcf	31,0	;volatile
  1700  01D7                     l1119:
  1701                           
  1702                           ;adc_module.c: 6:     ANSELbits.ANS = 0b0000;
  1703  01D7  30F0               	movlw	-16
  1704  01D8  1683               	bsf	3,5	;RP0=1, select bank1
  1705  01D9  059F               	andwf	31,f	;volatile
  1706  01DA                     l214:
  1707  01DA  0008               	return
  1708  01DB                     __end_of_adc_deinit:
  1709                           
  1710                           	psect	text13
  1711  01A8                     __ptext13:	
  1712 ;; *************** function _TMR1_init *****************
  1713 ;; Defined at:
  1714 ;;		line 4 in file "tmr1_module.c"
  1715 ;; Parameters:    Size  Location     Type
  1716 ;;		None
  1717 ;; Auto vars:     Size  Location     Type
  1718 ;;		None
  1719 ;; Return value:  Size  Location     Type
  1720 ;;                  1    wreg      void 
  1721 ;; Registers used:
  1722 ;;		wreg, status,2, status,0
  1723 ;; Tracked objects:
  1724 ;;		On entry : 0/0
  1725 ;;		On exit  : 0/0
  1726 ;;		Unchanged: 0/0
  1727 ;; Data sizes:     COMMON   BANK0
  1728 ;;      Params:         0       0
  1729 ;;      Locals:         0       0
  1730 ;;      Temps:          0       0
  1731 ;;      Totals:         0       0
  1732 ;;Total ram usage:        0 bytes
  1733 ;; Hardware stack levels used: 1
  1734 ;; Hardware stack levels required when called: 3
  1735 ;; This function calls:
  1736 ;;		Nothing
  1737 ;; This function is called by:
  1738 ;;		_main
  1739 ;; This function uses a non-reentrant model
  1740 ;;
  1741                           
  1742  01A8                     _TMR1_init:	
  1743                           ;psect for function _TMR1_init
  1744                           
  1745  01A8                     l1105:	
  1746                           ;incstack = 0
  1747                           ; Regs used in _TMR1_init: [wreg+status,2+status,0]
  1748                           
  1749                           
  1750                           ;tmr1_module.c: 5:     TMR1GE = 0;
  1751  01A8  1283               	bcf	3,5	;RP0=0, select bank0
  1752  01A9  1310               	bcf	16,6	;volatile
  1753  01AA                     l1107:
  1754                           
  1755                           ;tmr1_module.c: 6:     T1CONbits.T1CKPS = 0b00;
  1756  01AA  30CF               	movlw	-49
  1757  01AB  0590               	andwf	16,f	;volatile
  1758  01AC                     l1109:
  1759                           
  1760                           ;tmr1_module.c: 7:     T1OSCEN = 0;
  1761  01AC  1190               	bcf	16,3	;volatile
  1762  01AD                     l1111:
  1763                           
  1764                           ;tmr1_module.c: 9:     TMR1CS = 0;
  1765  01AD  1090               	bcf	16,1	;volatile
  1766  01AE                     l1113:
  1767                           
  1768                           ;tmr1_module.c: 10:     TMR1ON = 0;
  1769  01AE  1010               	bcf	16,0	;volatile
  1770  01AF                     l1115:
  1771                           
  1772                           ;tmr1_module.c: 11:     TMR1 = 59582;
  1773  01AF  30E8               	movlw	232
  1774  01B0  008F               	movwf	15	;volatile
  1775  01B1  30BE               	movlw	190
  1776  01B2  008E               	movwf	14	;volatile
  1777  01B3                     l253:
  1778  01B3  0008               	return
  1779  01B4                     __end_of_TMR1_init:
  1780                           
  1781                           	psect	text14
  1782  0189                     __ptext14:	
  1783 ;; *************** function _ISR *****************
  1784 ;; Defined at:
  1785 ;;		line 59 in file "main.c"
  1786 ;; Parameters:    Size  Location     Type
  1787 ;;		None
  1788 ;; Auto vars:     Size  Location     Type
  1789 ;;		None
  1790 ;; Return value:  Size  Location     Type
  1791 ;;                  1    wreg      void 
  1792 ;; Registers used:
  1793 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1794 ;; Tracked objects:
  1795 ;;		On entry : 0/0
  1796 ;;		On exit  : 0/0
  1797 ;;		Unchanged: 0/0
  1798 ;; Data sizes:     COMMON   BANK0
  1799 ;;      Params:         0       0
  1800 ;;      Locals:         0       0
  1801 ;;      Temps:          0       4
  1802 ;;      Totals:         0       4
  1803 ;;Total ram usage:        4 bytes
  1804 ;; Hardware stack levels used: 1
  1805 ;; Hardware stack levels required when called: 2
  1806 ;; This function calls:
  1807 ;;		_TMR1_ISR
  1808 ;; This function is called by:
  1809 ;;		Interrupt level 1
  1810 ;; This function uses a non-reentrant model
  1811 ;;
  1812                           
  1813  0189                     _ISR:	
  1814                           ;psect for function _ISR
  1815                           
  1816  0189                     i1l1211:
  1817                           
  1818                           ;main.c: 61:     if(TMR1IF) {
  1819  0189  1C0C               	btfss	12,0	;volatile
  1820  018A  298C               	goto	u32_21
  1821  018B  298D               	goto	u32_20
  1822  018C                     u32_21:
  1823  018C  2990               	goto	i1l65
  1824  018D                     u32_20:
  1825  018D                     i1l1213:
  1826                           
  1827                           ;main.c: 62:         TMR1_ISR();
  1828  018D  203E               	fcall	_TMR1_ISR
  1829  018E                     i1l1215:
  1830                           
  1831                           ;main.c: 63:         TMR1IF = 0;
  1832  018E  1283               	bcf	3,5	;RP0=0, select bank0
  1833  018F  100C               	bcf	12,0	;volatile
  1834  0190                     i1l65:
  1835  0190  0828               	movf	??_ISR+3,w
  1836  0191  0827               	movf	??_ISR+2,w
  1837  0192  008A               	movwf	10
  1838  0193  0826               	movf	??_ISR+1,w
  1839  0194  0084               	movwf	4
  1840  0195  0E25               	swapf	??_ISR,w
  1841  0196  0083               	movwf	3
  1842  0197  0EDE               	swapf	btemp,f
  1843  0198  0E5E               	swapf	btemp,w
  1844  0199  0009               	retfie
  1845  019A                     __end_of_ISR:
  1846                           
  1847                           	psect	intentry
  1848  0004                     __pintentry:	
  1849                           ;incstack = 0
  1850                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1851                           
  1852  0004                     interrupt_function:
  1853  005E                     saved_w	set	btemp
  1854  0004  00DE               	movwf	btemp
  1855  0005  0E03               	swapf	3,w
  1856  0006  1283               	bcf	3,5	;RP0=0, select bank0
  1857  0007  00A5               	movwf	??_ISR
  1858  0008  0804               	movf	4,w
  1859  0009  00A6               	movwf	??_ISR+1
  1860  000A  080A               	movf	10,w
  1861  000B  00A7               	movwf	??_ISR+2
  1862  000C  085F               	movf	btemp+1,w
  1863  000D  00A8               	movwf	??_ISR+3
  1864  000E  2989               	ljmp	_ISR
  1865                           
  1866                           	psect	text15
  1867  003E                     __ptext15:	
  1868 ;; *************** function _TMR1_ISR *****************
  1869 ;; Defined at:
  1870 ;;		line 64 in file "tmr1_module.c"
  1871 ;; Parameters:    Size  Location     Type
  1872 ;;		None
  1873 ;; Auto vars:     Size  Location     Type
  1874 ;;		None
  1875 ;; Return value:  Size  Location     Type
  1876 ;;                  1    wreg      void 
  1877 ;; Registers used:
  1878 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1879 ;; Tracked objects:
  1880 ;;		On entry : 0/0
  1881 ;;		On exit  : 0/0
  1882 ;;		Unchanged: 0/0
  1883 ;; Data sizes:     COMMON   BANK0
  1884 ;;      Params:         0       0
  1885 ;;      Locals:         0       0
  1886 ;;      Temps:          0       5
  1887 ;;      Totals:         0       5
  1888 ;;Total ram usage:        5 bytes
  1889 ;; Hardware stack levels used: 1
  1890 ;; Hardware stack levels required when called: 1
  1891 ;; This function calls:
  1892 ;;		_even_pins_clear_set
  1893 ;;		_even_pins_set_clear
  1894 ;;		_odd_pins_clear_set
  1895 ;;		_odd_pins_set_clear
  1896 ;;		i1_reset_all_pins
  1897 ;; This function is called by:
  1898 ;;		_ISR
  1899 ;; This function uses a non-reentrant model
  1900 ;;
  1901                           
  1902  003E                     _TMR1_ISR:	
  1903                           ;psect for function _TMR1_ISR
  1904                           
  1905  003E                     i1l1167:	
  1906                           ;incstack = 0
  1907                           ; Regs used in _TMR1_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1908                           
  1909                           
  1910                           ;tmr1_module.c: 70:         TMR1 = 59582;
  1911  003E  30E8               	movlw	232
  1912  003F  1283               	bcf	3,5	;RP0=0, select bank0
  1913  0040  008F               	movwf	15	;volatile
  1914  0041  30BE               	movlw	190
  1915  0042  008E               	movwf	14	;volatile
  1916  0043                     i1l1169:
  1917                           
  1918                           ;tmr1_module.c: 72:         OF_num_TMR1++;
  1919  0043  3001               	movlw	1
  1920  0044  07CB               	addwf	_OF_num_TMR1,f
  1921  0045  1803               	skipnc
  1922  0046  0ACC               	incf	_OF_num_TMR1+1,f
  1923  0047  3000               	movlw	0
  1924  0048  07CC               	addwf	_OF_num_TMR1+1,f
  1925  0049                     i1l1171:
  1926                           
  1927                           ;tmr1_module.c: 76:         pair_select = !pair_select;
  1928  0049  084F               	movf	_pair_select,w
  1929  004A  1903               	btfsc	3,2
  1930  004B  284D               	goto	u25_21
  1931  004C  284F               	goto	u25_20
  1932  004D                     u25_21:
  1933  004D  3001               	movlw	1
  1934  004E  2850               	goto	u26_20
  1935  004F                     u25_20:
  1936  004F  3000               	movlw	0
  1937  0050                     u26_20:
  1938  0050  00A0               	movwf	??_TMR1_ISR
  1939  0051  0820               	movf	??_TMR1_ISR,w
  1940  0052  00CF               	movwf	_pair_select
  1941  0053                     i1l1173:
  1942                           
  1943                           ;tmr1_module.c: 78:         set_clear_sequence ^= tmp_set_clear_sequence;
  1944  0053  084D               	movf	_tmp_set_clear_sequence,w
  1945  0054  00A0               	movwf	??_TMR1_ISR
  1946  0055  0820               	movf	??_TMR1_ISR,w
  1947  0056  06CE               	xorwf	_set_clear_sequence,f
  1948  0057                     i1l1175:
  1949                           
  1950                           ;tmr1_module.c: 79:         tmp_set_clear_sequence = !tmp_set_clear_sequence;
  1951  0057  084D               	movf	_tmp_set_clear_sequence,w
  1952  0058  1903               	btfsc	3,2
  1953  0059  285B               	goto	u27_21
  1954  005A  285D               	goto	u27_20
  1955  005B                     u27_21:
  1956  005B  3001               	movlw	1
  1957  005C  285E               	goto	u28_20
  1958  005D                     u27_20:
  1959  005D  3000               	movlw	0
  1960  005E                     u28_20:
  1961  005E  00A0               	movwf	??_TMR1_ISR
  1962  005F  0820               	movf	??_TMR1_ISR,w
  1963  0060  00CD               	movwf	_tmp_set_clear_sequence
  1964  0061                     i1l1177:
  1965                           
  1966                           ;tmr1_module.c: 82:         (*func_ptr[CW_CCW_select][pair_select][set_clear_sequence])(
      +                          );
  1967  0061  0850               	movf	_CW_CCW_select,w
  1968  0062  00A0               	movwf	??_TMR1_ISR
  1969  0063  3002               	movlw	2
  1970  0064                     u29_25:
  1971  0064  1003               	clrc
  1972  0065  0DA0               	rlf	??_TMR1_ISR,f
  1973  0066  3EFF               	addlw	-1
  1974  0067  1D03               	skipz
  1975  0068  2864               	goto	u29_25
  1976  0069  3036               	movlw	(low (_func_ptr| 0))& (0+255)
  1977  006A  0720               	addwf	??_TMR1_ISR,w
  1978  006B  00A1               	movwf	??_TMR1_ISR+1
  1979  006C  084F               	movf	_pair_select,w
  1980  006D  00A2               	movwf	??_TMR1_ISR+2
  1981  006E  0722               	addwf	??_TMR1_ISR+2,w
  1982  006F  0721               	addwf	??_TMR1_ISR+1,w
  1983  0070  00A3               	movwf	??_TMR1_ISR+3
  1984  0071  084E               	movf	_set_clear_sequence,w
  1985  0072  0723               	addwf	??_TMR1_ISR+3,w
  1986  0073  00A4               	movwf	??_TMR1_ISR+4
  1987  0074  0824               	movf	??_TMR1_ISR+4,w
  1988  0075  0084               	movwf	4
  1989  0076  1383               	bcf	3,7	;select IRP bank0
  1990  0077  0800               	movf	0,w
  1991  0078  2034               	fcall	i1fptable
  1992  0079                     i1l1179:
  1993                           
  1994                           ;tmr1_module.c: 86:         if (OF_num_TMR1 == target_OF_num) {
  1995  0079  1283               	bcf	3,5	;RP0=0, select bank0
  1996  007A  0843               	movf	_target_OF_num+1,w
  1997  007B  064C               	xorwf	_OF_num_TMR1+1,w
  1998  007C  1D03               	skipz
  1999  007D  2880               	goto	u30_25
  2000  007E  0842               	movf	_target_OF_num,w
  2001  007F  064B               	xorwf	_OF_num_TMR1,w
  2002  0080                     u30_25:
  2003  0080  1D03               	skipz
  2004  0081  2883               	goto	u30_21
  2005  0082  2884               	goto	u30_20
  2006  0083                     u30_21:
  2007  0083  2886               	goto	i1l273
  2008  0084                     u30_20:
  2009  0084                     i1l1181:
  2010                           
  2011                           ;tmr1_module.c: 87:             TMR1ON = 0;
  2012  0084  1010               	bcf	16,0	;volatile
  2013  0085                     i1l1183:
  2014                           
  2015                           ;tmr1_module.c: 88:             reset_all_pins();
  2016  0085  21DB               	fcall	i1_reset_all_pins
  2017  0086                     i1l273:
  2018  0086  0008               	return
  2019  0087                     __end_of_TMR1_ISR:
  2020                           
  2021                           	psect	text16
  2022  01DB                     __ptext16:	
  2023 ;; *************** function i1_reset_all_pins *****************
  2024 ;; Defined at:
  2025 ;;		line 55 in file "coil_control.c"
  2026 ;; Parameters:    Size  Location     Type
  2027 ;;		None
  2028 ;; Auto vars:     Size  Location     Type
  2029 ;;		None
  2030 ;; Return value:  Size  Location     Type
  2031 ;;                  1    wreg      void 
  2032 ;; Registers used:
  2033 ;;		None
  2034 ;; Tracked objects:
  2035 ;;		On entry : 0/0
  2036 ;;		On exit  : 0/0
  2037 ;;		Unchanged: 0/0
  2038 ;; Data sizes:     COMMON   BANK0
  2039 ;;      Params:         0       0
  2040 ;;      Locals:         0       0
  2041 ;;      Temps:          0       0
  2042 ;;      Totals:         0       0
  2043 ;;Total ram usage:        0 bytes
  2044 ;; Hardware stack levels used: 1
  2045 ;; This function calls:
  2046 ;;		Nothing
  2047 ;; This function is called by:
  2048 ;;		_TMR1_ISR
  2049 ;; This function uses a non-reentrant model
  2050 ;;
  2051                           
  2052  01DB                     i1_reset_all_pins:	
  2053                           ;psect for function i1_reset_all_pins
  2054                           
  2055  01DB                     i1l1097:	
  2056                           ;incstack = 0
  2057                           ; Regs used in i1_reset_all_pins: []
  2058                           
  2059                           
  2060                           ;coil_control.c: 56:     GPIO0 = 0;
  2061  01DB  1283               	bcf	3,5	;RP0=0, select bank0
  2062  01DC  1005               	bcf	5,0	;volatile
  2063                           
  2064                           ;coil_control.c: 57:     GPIO1 = 0;
  2065  01DD  1085               	bcf	5,1	;volatile
  2066                           
  2067                           ;coil_control.c: 58:     GPIO2 = 0;
  2068  01DE  1105               	bcf	5,2	;volatile
  2069                           
  2070                           ;coil_control.c: 59:     GPIO4 = 0;
  2071  01DF  1205               	bcf	5,4	;volatile
  2072  01E0                     i1l131:
  2073  01E0  0008               	return
  2074  01E1                     __end_ofi1_reset_all_pins:
  2075                           
  2076                           	psect	text17
  2077  01EE                     __ptext17:	
  2078 ;; *************** function _odd_pins_clear_set *****************
  2079 ;; Defined at:
  2080 ;;		line 50 in file "coil_control.c"
  2081 ;; Parameters:    Size  Location     Type
  2082 ;;		None
  2083 ;; Auto vars:     Size  Location     Type
  2084 ;;		None
  2085 ;; Return value:  Size  Location     Type
  2086 ;;                  1    wreg      void 
  2087 ;; Registers used:
  2088 ;;		None
  2089 ;; Tracked objects:
  2090 ;;		On entry : 0/0
  2091 ;;		On exit  : 0/0
  2092 ;;		Unchanged: 0/0
  2093 ;; Data sizes:     COMMON   BANK0
  2094 ;;      Params:         0       0
  2095 ;;      Locals:         0       0
  2096 ;;      Temps:          0       0
  2097 ;;      Totals:         0       0
  2098 ;;Total ram usage:        0 bytes
  2099 ;; Hardware stack levels used: 1
  2100 ;; This function calls:
  2101 ;;		Nothing
  2102 ;; This function is called by:
  2103 ;;		_TMR1_ISR
  2104 ;; This function uses a non-reentrant model
  2105 ;;
  2106                           
  2107  01EE                     _odd_pins_clear_set:	
  2108                           ;psect for function _odd_pins_clear_set
  2109                           
  2110  01EE                     i1l1075:	
  2111                           ;incstack = 0
  2112                           ; Regs used in _odd_pins_clear_set: []
  2113                           
  2114                           
  2115                           ;coil_control.c: 51:     GPIO0 = 0;
  2116  01EE  1283               	bcf	3,5	;RP0=0, select bank0
  2117  01EF  1005               	bcf	5,0	;volatile
  2118                           
  2119                           ;coil_control.c: 52:     GPIO2 = 1;
  2120  01F0  1505               	bsf	5,2	;volatile
  2121  01F1                     i1l128:
  2122  01F1  0008               	return
  2123  01F2                     __end_of_odd_pins_clear_set:
  2124                           
  2125                           	psect	text18
  2126  01F2                     __ptext18:	
  2127 ;; *************** function _even_pins_clear_set *****************
  2128 ;; Defined at:
  2129 ;;		line 40 in file "coil_control.c"
  2130 ;; Parameters:    Size  Location     Type
  2131 ;;		None
  2132 ;; Auto vars:     Size  Location     Type
  2133 ;;		None
  2134 ;; Return value:  Size  Location     Type
  2135 ;;                  1    wreg      void 
  2136 ;; Registers used:
  2137 ;;		None
  2138 ;; Tracked objects:
  2139 ;;		On entry : 0/0
  2140 ;;		On exit  : 0/0
  2141 ;;		Unchanged: 0/0
  2142 ;; Data sizes:     COMMON   BANK0
  2143 ;;      Params:         0       0
  2144 ;;      Locals:         0       0
  2145 ;;      Temps:          0       0
  2146 ;;      Totals:         0       0
  2147 ;;Total ram usage:        0 bytes
  2148 ;; Hardware stack levels used: 1
  2149 ;; This function calls:
  2150 ;;		Nothing
  2151 ;; This function is called by:
  2152 ;;		_TMR1_ISR
  2153 ;; This function uses a non-reentrant model
  2154 ;;
  2155                           
  2156  01F2                     _even_pins_clear_set:	
  2157                           ;psect for function _even_pins_clear_set
  2158                           
  2159  01F2                     i1l1071:	
  2160                           ;incstack = 0
  2161                           ; Regs used in _even_pins_clear_set: []
  2162                           
  2163                           
  2164                           ;coil_control.c: 41:     GPIO1 = 0;
  2165  01F2  1283               	bcf	3,5	;RP0=0, select bank0
  2166  01F3  1085               	bcf	5,1	;volatile
  2167                           
  2168                           ;coil_control.c: 42:     GPIO4 = 1;
  2169  01F4  1605               	bsf	5,4	;volatile
  2170  01F5                     i1l122:
  2171  01F5  0008               	return
  2172  01F6                     __end_of_even_pins_clear_set:
  2173                           
  2174                           	psect	text19
  2175  01F6                     __ptext19:	
  2176 ;; *************** function _even_pins_set_clear *****************
  2177 ;; Defined at:
  2178 ;;		line 35 in file "coil_control.c"
  2179 ;; Parameters:    Size  Location     Type
  2180 ;;		None
  2181 ;; Auto vars:     Size  Location     Type
  2182 ;;		None
  2183 ;; Return value:  Size  Location     Type
  2184 ;;                  1    wreg      void 
  2185 ;; Registers used:
  2186 ;;		None
  2187 ;; Tracked objects:
  2188 ;;		On entry : 0/0
  2189 ;;		On exit  : 0/0
  2190 ;;		Unchanged: 0/0
  2191 ;; Data sizes:     COMMON   BANK0
  2192 ;;      Params:         0       0
  2193 ;;      Locals:         0       0
  2194 ;;      Temps:          0       0
  2195 ;;      Totals:         0       0
  2196 ;;Total ram usage:        0 bytes
  2197 ;; Hardware stack levels used: 1
  2198 ;; This function calls:
  2199 ;;		Nothing
  2200 ;; This function is called by:
  2201 ;;		_TMR1_ISR
  2202 ;; This function uses a non-reentrant model
  2203 ;;
  2204                           
  2205  01F6                     _even_pins_set_clear:	
  2206                           ;psect for function _even_pins_set_clear
  2207                           
  2208  01F6                     i1l1069:	
  2209                           ;incstack = 0
  2210                           ; Regs used in _even_pins_set_clear: []
  2211                           
  2212                           
  2213                           ;coil_control.c: 36:     GPIO1 = 1;
  2214  01F6  1283               	bcf	3,5	;RP0=0, select bank0
  2215  01F7  1485               	bsf	5,1	;volatile
  2216                           
  2217                           ;coil_control.c: 37:     GPIO4 = 0;
  2218  01F8  1205               	bcf	5,4	;volatile
  2219  01F9                     i1l119:
  2220  01F9  0008               	return
  2221  01FA                     __end_of_even_pins_set_clear:
  2222                           
  2223                           	psect	text20
  2224  01FA                     __ptext20:	
  2225 ;; *************** function _odd_pins_set_clear *****************
  2226 ;; Defined at:
  2227 ;;		line 45 in file "coil_control.c"
  2228 ;; Parameters:    Size  Location     Type
  2229 ;;		None
  2230 ;; Auto vars:     Size  Location     Type
  2231 ;;		None
  2232 ;; Return value:  Size  Location     Type
  2233 ;;                  1    wreg      void 
  2234 ;; Registers used:
  2235 ;;		None
  2236 ;; Tracked objects:
  2237 ;;		On entry : 0/0
  2238 ;;		On exit  : 0/0
  2239 ;;		Unchanged: 0/0
  2240 ;; Data sizes:     COMMON   BANK0
  2241 ;;      Params:         0       0
  2242 ;;      Locals:         0       0
  2243 ;;      Temps:          0       0
  2244 ;;      Totals:         0       0
  2245 ;;Total ram usage:        0 bytes
  2246 ;; Hardware stack levels used: 1
  2247 ;; This function calls:
  2248 ;;		Nothing
  2249 ;; This function is called by:
  2250 ;;		_TMR1_ISR
  2251 ;; This function uses a non-reentrant model
  2252 ;;
  2253                           
  2254  01FA                     _odd_pins_set_clear:	
  2255                           ;psect for function _odd_pins_set_clear
  2256                           
  2257  01FA                     i1l1073:	
  2258                           ;incstack = 0
  2259                           ; Regs used in _odd_pins_set_clear: []
  2260                           
  2261                           
  2262                           ;coil_control.c: 46:     GPIO0 = 1;
  2263  01FA  1283               	bcf	3,5	;RP0=0, select bank0
  2264  01FB  1405               	bsf	5,0	;volatile
  2265                           
  2266                           ;coil_control.c: 47:     GPIO2 = 0;
  2267  01FC  1105               	bcf	5,2	;volatile
  2268  01FD                     i1l125:
  2269  01FD  0008               	return
  2270  01FE                     __end_of_odd_pins_set_clear:
  2271  000C                     
  2272                           	psect	functab
  2273  0033                     __pfunctab:
  2274  0033                     fptable:
  2275  0033  2833               	goto	fptable	;no entries
  2276  0034                     __i1fptable:
  2277  0034                     i1fptable:
  2278  0034  00DF               	movwf	(btemp+1)& (0+127)
  2279  0035  3000               	movlw	high i1fptable
  2280  0036  008A               	movwf	10
  2281  0037  085F               	movf	(btemp+1)& (0+127),w
  2282  0038  0782               	addwf	2,f
  2283  0039                     i1fpbase:
  2284  0039  2839               	goto	i1fpbase	; Call via a null pointer and you will get stuck here.
  2285  003A                     fp__odd_pins_set_clear:
  2286  003A  29FA               	ljmp	_odd_pins_set_clear
  2287  003B                     fp__even_pins_set_clear:
  2288  003B  29F6               	ljmp	_even_pins_set_clear
  2289  003C                     fp__even_pins_clear_set:
  2290  003C  29F2               	ljmp	_even_pins_clear_set
  2291  003D                     fp__odd_pins_clear_set:
  2292  003D  29EE               	ljmp	_odd_pins_clear_set
  2293  003E                     __end_of__i1fptable:
  2294  005E                     btemp	set	94	;btemp
  2295  005E                     wtemp0	set	94
  2296                           
  2297                           	psect	idloc
  2298                           
  2299                           ;Config register IDLOC0 @ 0x2000
  2300                           ;	unspecified, using default values
  2301  2000                     	org	8192
  2302  2000  3FFF               	dw	16383
  2303                           
  2304                           ;Config register IDLOC1 @ 0x2001
  2305                           ;	unspecified, using default values
  2306  2001                     	org	8193
  2307  2001  3FFF               	dw	16383
  2308                           
  2309                           ;Config register IDLOC2 @ 0x2002
  2310                           ;	unspecified, using default values
  2311  2002                     	org	8194
  2312  2002  3FFF               	dw	16383
  2313                           
  2314                           ;Config register IDLOC3 @ 0x2003
  2315                           ;	unspecified, using default values
  2316  2003                     	org	8195
  2317  2003  3FFF               	dw	16383
  2318                           
  2319                           	psect	config
  2320                           
  2321                           ;Config register CONFIG @ 0x2007
  2322                           ;	Oscillator Selection bits
  2323                           ;	FOSC = INTRCIO, INTOSC oscillator: I/O function on GP4/OSC2/CLKOUT pin, I/O function o
      +                          n GP5/OSC1/CLKIN
  2324                           ;	Watchdog Timer Enable bit
  2325                           ;	WDTE = OFF, WDT disabled
  2326                           ;	Power-Up Timer Enable bit
  2327                           ;	PWRTE = ON, PWRT enabled
  2328                           ;	GP3/MCLR pin function select
  2329                           ;	MCLRE = OFF, GP3/MCLR pin function is digital I/O, MCLR internally tied to VDD
  2330                           ;	Brown-out Detect Enable bit
  2331                           ;	BOREN = ON, BOD enabled
  2332                           ;	Code Protection bit
  2333                           ;	CP = OFF, Program Memory code protection is disabled
  2334                           ;	Data Code Protection bit
  2335                           ;	CPD = OFF, Data memory code protection is disabled
  2336  2007                     	org	8199
  2337  2007  31C4               	dw	12740

Data Sizes:
    Strings     17
    Constant    0
    Data        14
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62     22      49

Pointer List with Targets:

    soft_uart_send_string@string	PTR unsigned char  size(1) Largest target is 14
		 -> STR_2(CODE[3]), STR_1(CODE[14]), 

    soft_uart_send_int@nums	PTR unsigned char [3] size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    soft_uart_send_int@F620	PTR unsigned char [3] size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    func_ptr	PTR FTN()void [2][2][2] size(1) Largest target is 1
		 -> odd_pins_clear_set(), odd_pins_set_clear(), even_pins_clear_set(), even_pins_set_clear(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_soft_uart_send_int
    _start_timer->_update_current_position
    _soft_uart_send_string->_soft_uart_send_uint8_t
    _soft_uart_send_int->_soft_uart_send_uint8_t

Critical Paths under _ISR in BANK0

    _ISR->_TMR1_ISR

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     679
                                             19 BANK0      3     3      0
                          _TMR1_init
                         _adc_deinit
                          _coil_init
                  _comparator_deinit
                     _interrupt_init
                     _reset_all_pins
          _retrieve_current_position
                     _soft_uart_init
                 _soft_uart_send_int
              _soft_uart_send_string
                        _start_timer
 ---------------------------------------------------------------------------------
 (1) _start_timer                                          1     1      0     174
                                             11 BANK0      1     1      0
            _update_current_position
 ---------------------------------------------------------------------------------
 (2) _update_current_position                              2     0      2     174
                                              9 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _soft_uart_send_string                                3     3      0     246
                                             12 BANK0      3     3      0
             _soft_uart_send_uint8_t
 ---------------------------------------------------------------------------------
 (1) _soft_uart_send_int                                   8     6      2     259
                                             12 BANK0      7     5      2
             _soft_uart_send_uint8_t
 ---------------------------------------------------------------------------------
 (2) _soft_uart_send_uint8_t                               3     3      0      90
                                              9 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _soft_uart_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _retrieve_current_position                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _reset_all_pins                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _interrupt_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _comparator_deinit                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _coil_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_deinit                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR1_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0       0
                                              5 BANK0      4     4      0
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (4) _TMR1_ISR                                             5     5      0       0
                                              0 BANK0      5     5      0
                _even_pins_clear_set *
                _even_pins_set_clear *
                 _odd_pins_clear_set *
                 _odd_pins_set_clear *
                   i1_reset_all_pins
 ---------------------------------------------------------------------------------
 (5) i1_reset_all_pins                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _odd_pins_set_clear                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _odd_pins_clear_set                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _even_pins_set_clear                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _even_pins_clear_set                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _TMR1_init
   _adc_deinit
   _coil_init
   _comparator_deinit
   _interrupt_init
   _reset_all_pins
   _retrieve_current_position
   _soft_uart_init
   _soft_uart_send_int
     _soft_uart_send_uint8_t
   _soft_uart_send_string
     _soft_uart_send_uint8_t
   _start_timer
     _update_current_position

 _ISR (ROOT)
   _TMR1_ISR
     _even_pins_clear_set *
     _even_pins_set_clear *
     _odd_pins_clear_set *
     _odd_pins_set_clear *
     i1_reset_all_pins *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               3E     16      31       4       79.0%
BITBANK0            3E      0       0       3        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITCOMMON            0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      31       6        0.0%
ABS                  0      0      31       5        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Jun 15 20:25:52 2023

                                pc 0002                        _OF_num_TMR1 004B  
                               fsr 0004             __end_of_interrupt_init 01D5  
                              l131 01CE                                l116 01C2  
                              l214 01DA                                l310 0106  
                              l305 01E5                                l323 0171  
                              l156 01ED                                l260 00C6  
                              l253 01B3                                l309 00F6  
                              l317 0159                                l266 01E9  
                              l187 01D4                                l269 01C8  
                              _GIE 005F                                u200 00F6  
                              u201 00F5                                u210 008D  
                              u211 008C                                u220 00B8  
                              u221 00B7                                u230 0171  
                              u310 0126                                u231 0170  
                              u311 0125                                u240 0159  
                              u241 0158                                u225 00B4  
                              u180 00E2                                u181 00DF  
                              u174 00D9                                u175 00D7  
                              u337 0115                                u194 00E4  
                              u347 013A                                _ISR 0189  
                              u357 00CC                                u367 00E6  
                              u377 00F9                                u387 0101  
                              fsr0 0004                                indf 0000  
                      _start_timer 0087             __end_of_soft_uart_init 01E6  
               _odd_pins_clear_set 01EE                               ?_ISR 0020  
                             l1101 01EA                               l1111 01AD  
                             l1103 01CF                               l1113 01AE  
                             l1105 01A8                               l1121 01E1  
                             l1201 012A                               l1115 01AF  
                             l1107 01AA                               l1123 01C9  
                             l1131 0096                               l1203 012B  
                             l1109 01AC                               l1117 01D5  
                             l1125 01E6                               l1141 00C3  
                             l1133 00A0                               l1205 012D  
                             l1119 01D7                               l1151 0168  
                             l1143 00C5                               l1135 00A9  
                             l1127 0087                               l1207 0133  
                             l1081 00CA                               l1161 0148  
                             l1153 0140                               l1145 015C  
                             l1137 00B8                               l1129 008D  
                             l1209 0135                               l1091 00E4  
                             l1083 00D1                               l1163 014E  
                             l1155 0147                               l1147 015E  
                             l1139 00BE                               l1093 00EB  
                             l1165 0153                               l1149 0163  
                             l1077 01C3                               l1095 00F7  
                             l1079 00C9                               l1191 010C  
                             l1089 00D3                               l1193 010D  
                             l1185 0107                               l1099 01BC  
                             l1195 010E                               l1187 0108  
                             l1197 011D                               l1189 0109  
                             l1199 0126                               _ADON 00F8  
                             STR_1 0178                               STR_2 0186  
                             _PEIE 005E                               i1l65 0190  
                             _TMR1 000E                ?_odd_pins_clear_set 0020  
                             _main 0107                               btemp 005E  
                             start 000F                _even_pins_clear_set 01F2  
                            ??_ISR 0025               ??_odd_pins_clear_set 0000  
  __end_of_update_current_position 01C9                              ?_main 0020  
                  ?_interrupt_init 0020                              _GPIO0 0028  
                            _GPIO1 0029                              _GPIO2 002A  
                            _GPIO3 002B                              _GPIO4 002C  
                            _GPIO5 002D                              i1l122 01F5  
                            i1l131 01E0                              i1l125 01FD  
                            i1l119 01F9                              i1l128 01F1  
                            i1l273 0086                              u30_20 0084  
                            u30_21 0083                              u30_25 0080  
             ?_even_pins_clear_set 0020                              u32_20 018D  
                            u32_21 018C                              u25_20 004F  
                            u25_21 004D                              u26_20 0050  
                            u27_20 005D                              u27_21 005B  
                            u28_20 005E                              u29_25 0064  
               _odd_pins_set_clear 01FA                   __end_of_TMR1_ISR 0087  
                  ?_soft_uart_init 0020             ?_soft_uart_send_string 0020  
                            fpbase 0000                              pclath 000A  
              ?_odd_pins_set_clear 0020                              status 0003  
                            wtemp0 005E                _even_pins_set_clear 01F6  
                  __initialization 0010                       __end_of_main 0140  
             ??_odd_pins_set_clear 0000             soft_uart_send_int@F620 0044  
                           ??_main 0033              ??_even_pins_clear_set 0000  
             ?_even_pins_set_clear 0020             soft_uart_send_int@nums 002F  
                           i1l1211 0189                             i1l1213 018D  
                           i1l1071 01F2                             i1l1215 018E  
                           i1l1073 01FA                             i1l1075 01EE  
                           i1l1171 0049                             i1l1069 01F6  
                           i1l1181 0084                             i1l1173 0053  
                           i1l1183 0085                             i1l1175 0057  
                           i1l1167 003E                             i1l1097 01DB  
                           i1l1177 0061                             i1l1169 0043  
                           i1l1179 0079        ??_retrieve_current_position 0000  
                       __i1fptable 0034                             _TMR0IE 005D  
                           _TMR1GE 0086                             _TMR1IE 0460  
                           _TMR1IF 0060                             _TMR1CS 0081  
                           _TMR1ON 0080             soft_uart_send_string@i 002D  
                    _CW_CCW_select 0050            ?_soft_uart_send_uint8_t 0020  
                __end_of_TMR1_init 01B4              ??_even_pins_set_clear 0000  
                ?i1_reset_all_pins 0020                             fptable 0033  
                           fptotal 0000                             saved_w 005E  
               ??i1_reset_all_pins 0000            __end_of__initialization 0031  
   __end_of_soft_uart_send_uint8_t 0107                     __pcstackCOMMON 0000  
                       _adc_deinit 01D5                       __pidataBANK0 019A  
                        ?_TMR1_ISR 0020          _retrieve_current_position 01E6  
                     ?_start_timer 0020                         __pbssBANK0 0044  
          soft_uart_send_int@index 0032            soft_uart_send_int@value 002C  
       __end_of_soft_uart_send_int 015A                         __pmaintext 0107  
                 ??_interrupt_init 0000                         ??_TMR1_ISR 0020  
                       __pintentry 0004                   ??_soft_uart_init 0000  
                          _T1OSCEN 0083            ??_soft_uart_send_string 002C  
         ?_update_current_position 0029                            _TRISIO0 0428  
                          _TRISIO1 0429                            _TRISIO2 042A  
                          _TRISIO3 042B                            _TRISIO4 042C  
                          _TRISIO5 042D                         __stringtab 0172  
                          i1fpbase 0039                  __end_of_coil_init 01C3  
                      ?_adc_deinit 0020                          _CMCONbits 0019  
                        _ANSELbits 009F                            __ptext1 0087  
                          __ptext2 01C3                            __ptext3 015A  
                          __ptext4 0140                            __ptext5 00C7  
                          __ptext6 01E1                            __ptext7 01E6  
                          __ptext8 01C9                            __ptext9 01CF  
              __size_of__i1fptable 000A                          _T1CONbits 0010  
                   _reset_all_pins 01C9                            _message 0047  
                          clrloop0 01B5               end_of_initialization 0031  
               _set_clear_sequence 004E        soft_uart_send_uint8_t@value 002A  
      __end_of_even_pins_clear_set 01F6  soft_uart_send_uint8_t@bit_counter 002B  
           __end_of_reset_all_pins 01CF                          _TMR1_init 01A8  
                 _current_position 0049        __end_of_even_pins_set_clear 01FA  
                  ?_reset_all_pins 0020                         ?_TMR1_init 0020  
              start_initialization 0010                        __end_of_ISR 019A  
__end_of_retrieve_current_position 01EA                        __pdataBANK0 0036  
               _soft_uart_send_int 0140                 __end_of__i1fptable 003E  
                        ___latbits 0000                      __pcstackBANK0 0020  
    __end_of_soft_uart_send_string 0172                ?_soft_uart_send_int 002C  
                    _target_OF_num 0042                       ??_adc_deinit 0000  
                        __pfunctab 0033               ??_soft_uart_send_int 002E  
                        _coil_init 01BC                          __pstrings 0172  
                      ??_TMR1_init 0000                 __end_of_adc_deinit 01DB  
                interrupt_function 0004           ??_soft_uart_send_uint8_t 0029  
                 i1_reset_all_pins 01DB                          clear_ram0 01B4  
                         _TMR1_ISR 003E         __end_of_odd_pins_clear_set 01F2  
                        _num_steps 003E                         ?_coil_init 0020  
                      __stringbase 0177             fp__even_pins_clear_set 003C  
                         i1fptable 0034                           i1fptotal 000C  
                 ??_reset_all_pins 0000         __end_of_odd_pins_set_clear 01FE  
               __end_of__stringtab 0178       update_current_position@value 0029  
                    ??_start_timer 002B             fp__even_pins_set_clear 003B  
                      _pair_select 004F                           __ptext10 01EA  
                         __ptext11 01BC                           __ptext20 01FA  
                         __ptext12 01D5                           __ptext13 01A8  
                         __ptext14 0189                           __ptext15 003E  
                         __ptext16 01DB                           __ptext17 01EE  
                         __ptext18 01F2                           __ptext19 01F6  
           _tmp_set_clear_sequence 004D                           _func_ptr 0036  
          _update_current_position 01C3                  _comparator_deinit 01EA  
                      ??_coil_init 0000              fp__odd_pins_clear_set 003D  
      soft_uart_send_string@string 002E                 ?_comparator_deinit 0020  
              ??_comparator_deinit 0000                __end_of_start_timer 00C7  
                         intlevel1 0033         ?_retrieve_current_position 0020  
                        stringcode 0172          __end_of_comparator_deinit 01EE  
            fp__odd_pins_set_clear 003A             _soft_uart_send_uint8_t 00C7  
         __end_ofi1_reset_all_pins 01E1                     _interrupt_init 01CF  
                         stringdir 0172                           stringtab 0172  
                   _soft_uart_init 01E1              _soft_uart_send_string 015A  
        ??_update_current_position 0000  
